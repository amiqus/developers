{
  "openapi": "3.1.0",
  "info": {
    "title": "Amiqus ID REST API",
    "version": "2.0",
    "description": "Amiqus ID API reference.\n\nðŸš§ Please note this documentation is beta and is subject to change without notice.\n\n[Changelog](/changelog)\n",
    "contact": {
      "email": "developers@amiqus.co",
      "name": "Amiqus Engineering",
      "url": "https://developers.amiqus.co/aqid/api-reference.html"
    }
  },
  "servers": [
    {
      "url": "https://amiqusid.test/api/v2",
      "description": "Local"
    },
    {
      "url": "https://id.amiqus.co/api/v2",
      "description": "Production"
    },
    {
      "url": "https://stage.aqid.co/api/v2",
      "description": "Stage"
    },
    {
      "url": "https://amiqusid.test/api",
      "description": "Local v1"
    }
  ],
  "tags": [
    {
      "name": "Service Status"
    },
    {
      "name": "User Account"
    },
    {
      "name": "Your Team"
    },
    {
      "name": "Records"
    },
    {
      "name": "Record Assignees"
    },
    {
      "name": "Clients"
    },
    {
      "name": "Client Assignees"
    },
    {
      "name": "Client Organisations"
    },
    {
      "name": "Steps"
    },
    {
      "name": "Teams"
    },
    {
      "name": "Organisations"
    },
    {
      "name": "Documents"
    },
    {
      "name": "Templates"
    },
    {
      "name": "Webhooks"
    },
    {
      "name": "Forms"
    },
    {
      "name": "Other Resources"
    }
  ],
  "paths": {
    "/status": {
      "get": {
        "summary": "Check service status",
        "description": "The status endpoint can be used to perform an authenticated request to verify the access token is valid and that the service is operational.\n",
        "operationId": "get-status",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Service Status"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/me": {
      "get": {
        "summary": "Retrieve user account",
        "description": "Retrieve details of the current user's account.\n\nAccess tokens are scoped to a single user account and team _(if they are a member of more than one)_. This endpoint can be used to determine which user the access token was issued for.\n\nTo retrieve details of the user's role within their current team, refer to **[Retrieve team membership](#tag/Your-Team/operation/get-team-me)**.\n",
        "operationId": "get-me",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "User Account"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "object": "user",
                  "id": 345789,
                  "name": "Bob Gale",
                  "email": "bob@example.com",
                  "is_verified": true,
                  "is_disabled": false,
                  "created_at": "2019-08-24T14:15:22Z",
                  "updated_at": "2019-08-24T14:15:22Z"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "summary": "Update user account",
        "description": "Update the current user's account details.\n\nWhen updating a user's email address, the change must be confirmed by the user via an email sent to their current email address. The updated email address won't be reflected in the response until the confirmation is complete.\n\nIt is not possible to update a user's password using the API.\n",
        "operationId": "patch-me",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "User Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "minProperties": 1,
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "name": "Robert Gale"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "object": "user",
                  "id": 345789,
                  "name": "Robert Gale",
                  "email": "bob@example.com",
                  "is_verified": true,
                  "is_disabled": false,
                  "created_at": "2019-08-24T14:15:22Z",
                  "updated_at": "2019-08-24T14:15:22Z"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        }
      }
    },
    "/me/teams": {
      "get": {
        "summary": "List all my teams",
        "description": "List all teams the current user is a member of.\n\nA user can be a member of multiple teams. To retrieve details of the team the access token is scoped to, refer to **[Retrieve current team](#tag/Your-Team/operation/get-team)**.\n",
        "operationId": "get-me-teams",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "User Account"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/Team"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "team",
                      "id": 88,
                      "uuid": "6b9c8323-4b54-4bb3-a1c8-68de534368a5",
                      "name": "Fusion Industries",
                      "contact": "fusion.support@example.com",
                      "telephone": null,
                      "tier": "standard_2021",
                      "logo": null,
                      "is_support_enabled": true,
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "archived_at": null
                    }
                  ],
                  "total": 1,
                  "count": 1,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/team": {
      "get": {
        "summary": "Retrieve current team",
        "description": "Returns basic details of the current team.",
        "operationId": "get-team",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Your Team"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                },
                "example": {
                  "object": "team",
                  "id": 88,
                  "identifier": "fusion-industries",
                  "uuid": "6b9c8323-4b54-4bb3-a1c8-68de534368a5",
                  "name": "Fusion Industries",
                  "contact": "fusion.support@example.com",
                  "telephone": null,
                  "tier": "standard_2021",
                  "logo": null,
                  "is_support_enabled": true,
                  "created_at": "2019-08-24T14:15:22Z",
                  "updated_at": "2019-08-24T14:15:22Z",
                  "archived_at": null
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update current team",
        "description": "Updates basic details of the current team.",
        "operationId": "patch-team",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Your Team"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "minProperties": 1,
                "$ref": "#/components/schemas/Team"
              },
              "example": {
                "contact": "fusion@example.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                },
                "example": {
                  "object": "team",
                  "id": 88,
                  "identifier": "fusion-industries",
                  "uuid": "6b9c8323-4b54-4bb3-a1c8-68de534368a5",
                  "name": "Fusion Industries",
                  "contact": "fusion@example.com",
                  "telephone": null,
                  "tier": "standard_2021",
                  "logo": null,
                  "is_support_enabled": true,
                  "created_at": "2019-08-24T14:15:22Z",
                  "updated_at": "2019-08-24T14:15:22Z",
                  "archived_at": null
                }
              }
            }
          }
        }
      }
    },
    "/team/me": {
      "get": {
        "summary": "Retrieve team membership",
        "description": "Retrieve membership details for the user's current team.\n\nTo retrieve the user's basic details, refer to **[Retrieve user account](#tag/Your-Team/operation/get-me)**.\n",
        "operationId": "get-team-me",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Your Team"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMember"
                },
                "example": {
                  "object": "team_member",
                  "id": 121,
                  "name": "Lorraine Baines",
                  "email": "lorraine@example.com",
                  "role": "owner"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/team/members": {
      "get": {
        "summary": "List all team members",
        "description": "List all team members of the current team.",
        "operationId": "get-team-members",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Your Team"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/TeamMember"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "team_member",
                      "id": 121,
                      "name": "Lorraine Baines",
                      "email": "lorraine@example.com",
                      "role": "owner"
                    },
                    {
                      "object": "team_member",
                      "id": 472,
                      "name": "Dennis Jones",
                      "email": "dennis@example.com",
                      "role": "member"
                    }
                  ],
                  "total": 2,
                  "count": 2,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          }
        }
      }
    },
    "/clients": {
      "get": {
        "summary": "List all clients",
        "description": "List all clients.",
        "operationId": "get-clients",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Clients"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/Client"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "pending",
                                          "approved",
                                          "rejected"
                                        ]
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "client",
                      "id": 73845,
                      "status": "pending",
                      "name": {
                        "object": "name",
                        "title": "mr",
                        "other_title": null,
                        "first_name": "Martin",
                        "middle_name": "Seamus",
                        "last_name": "McFly",
                        "name": "Martin McFly",
                        "full_name": "Martin Seamus McFly",
                        "complete_name": "Mr Martin Seamus McFly"
                      },
                      "email": "marty@example.com",
                      "landline": null,
                      "mobile": null,
                      "dob": "1968-06-12",
                      "reference": null,
                      "is_deletable": true,
                      "created_at": "2022-05-21T14:15:22Z",
                      "updated_at": "2022-05-21T14:15:22Z",
                      "archived_at": null
                    },
                    {
                      "object": "client",
                      "id": 73823,
                      "status": null,
                      "name": {
                        "object": "name",
                        "title": "miss",
                        "other_title": null,
                        "first_name": "Jennifer",
                        "middle_name": "Jane",
                        "last_name": "Parker",
                        "name": "Jennifer Parker",
                        "full_name": "Jennifer Jane Parker",
                        "complete_name": "Miss Jennifer Jane Parker"
                      },
                      "email": "jennifer@example.com",
                      "landline": null,
                      "mobile": null,
                      "dob": "1967-10-29",
                      "reference": null,
                      "is_deletable": true,
                      "created_at": "2022-05-21T14:22:01Z",
                      "updated_at": "2022-05-21T14:22:01Z",
                      "archived_at": null
                    },
                    {
                      "object": "client",
                      "id": 76219,
                      "status": "approved",
                      "name": {
                        "object": "name",
                        "title": "dr",
                        "other_title": null,
                        "first_name": "Emmett",
                        "middle_name": "Lathrop",
                        "last_name": "Brown",
                        "name": "Emmett Brown",
                        "full_name": "Emmett Lathrop Brown",
                        "complete_name": "Dr Emmett Lathrop Brown"
                      },
                      "email": "doc@example.com",
                      "landline": null,
                      "mobile": null,
                      "dob": null,
                      "reference": null,
                      "is_deletable": true,
                      "created_at": "2022-05-21T14:29:59Z",
                      "updated_at": "2022-05-21T14:29:59Z",
                      "archived_at": null
                    }
                  ],
                  "total": 3,
                  "count": 3,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a client",
        "description": "Create a client.",
        "operationId": "post-clients",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Clients"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Client"
                  },
                  {
                    "type": "object",
                    "required": [
                      "email",
                      "name"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "approved",
                          "rejected"
                        ]
                      },
                      "name": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Name"
                          },
                          {
                            "type": "object",
                            "required": [
                              "first_name",
                              "last_name"
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "example": {
                "name": {
                  "title": "mr",
                  "first_name": "Martin",
                  "middle_name": "Seamus",
                  "last_name": "McFly"
                },
                "email": "marty@example.com"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Client"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string",
                              "enum": [
                                "pending",
                                "approved",
                                "rejected"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "client",
                  "id": 73845,
                  "status": "pending",
                  "name": {
                    "object": "name",
                    "title": "mr",
                    "other_title": null,
                    "first_name": "Martin",
                    "middle_name": "Seamus",
                    "last_name": "McFly",
                    "name": "Martin McFly",
                    "full_name": "Martin Seamus McFly",
                    "complete_name": "Mr Martin Seamus McFly"
                  },
                  "email": "marty@example.com",
                  "landline": null,
                  "mobile": null,
                  "dob": null,
                  "reference": null,
                  "is_deletable": true,
                  "created_at": "2022-05-21T14:15:22Z",
                  "updated_at": "2022-05-21T14:15:22Z",
                  "archived_at": null
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId"
        }
      ],
      "get": {
        "summary": "Retrieve a client",
        "description": "Retrieve a client.",
        "operationId": "get-clients-id",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Clients"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Client"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string",
                              "enum": [
                                "pending",
                                "approved",
                                "rejected"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "client",
                  "id": 73845,
                  "status": "pending",
                  "name": {
                    "object": "name",
                    "title": "mr",
                    "other_title": null,
                    "first_name": "Martin",
                    "middle_name": "Seamus",
                    "last_name": "McFly",
                    "name": "Martin McFly",
                    "full_name": "Martin Seamus McFly",
                    "complete_name": "Mr Martin Seamus McFly"
                  },
                  "email": "marty@example.com",
                  "landline": null,
                  "mobile": null,
                  "dob": null,
                  "reference": null,
                  "is_deletable": true,
                  "created_at": "2022-05-21T14:15:22Z",
                  "updated_at": "2022-05-21T14:15:22Z",
                  "archived_at": null
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a client",
        "description": "Update a client.",
        "operationId": "patch-clients",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Clients"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Client"
                  },
                  {
                    "type": "object",
                    "minProperties": 1,
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "approved",
                          "rejected"
                        ]
                      }
                    }
                  }
                ]
              },
              "examples": {
                "email": {
                  "summary": "Email",
                  "description": "Update the client's email address.",
                  "value": {
                    "email": "martin.mcfly@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Client"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string",
                              "enum": [
                                "pending",
                                "approved",
                                "rejected"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "client",
                  "id": 73845,
                  "status": null,
                  "name": {
                    "object": "name",
                    "title": "mr",
                    "other_title": null,
                    "first_name": "Martin",
                    "middle_name": "Seamus",
                    "last_name": "McFly",
                    "name": "Martin McFly",
                    "full_name": "Martin Seamus McFly",
                    "complete_name": "Mr Martin Seamus McFly"
                  },
                  "email": "martin.mcfly@example.com",
                  "landline": null,
                  "mobile": null,
                  "dob": null,
                  "reference": null,
                  "is_deletable": true,
                  "created_at": "2022-05-21T14:15:22Z",
                  "updated_at": "2022-09-22T17:02:13Z",
                  "archived_at": null
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a client",
        "description": "Delete a client. Can be performed by Admin or Member users only. Clients with requests attached can only be deleted by Admin users.",
        "operationId": "delete-clients-id",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Clients"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/clients/{id}/address": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId"
        }
      ],
      "get": {
        "summary": "Retrieve address for a client",
        "description": "Retrieve address for a client.",
        "operationId": "get-clients-id-address",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Clients"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                },
                "example": {
                  "object": "address",
                  "unit": "3rd Floor",
                  "house_name": "Citypoint",
                  "house_number": "65",
                  "street_name": "Haymarket Terrace",
                  "second_street": null,
                  "district": null,
                  "city": "Edinburgh",
                  "province": null,
                  "postcode": "EH12 5HD",
                  "country": "GB"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Replace an address for a client",
        "description": "Replace address for a client.\n\nEach country has its own field requirements. Any field can become required if the selected country demands it, most commonly `postcode`.\n",
        "operationId": "put-clients-id-address",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Clients"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "minProperties": 1,
                "$ref": "#/components/schemas/Address"
              },
              "example": {
                "unit": "3rd Floor",
                "house_name": "Citypoint",
                "house_number": "65",
                "street_name": "Haymarket Terrace",
                "city": "Edinburgh",
                "postcode": "EH12 5HD",
                "country": "GB"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                },
                "example": {
                  "object": "address",
                  "unit": "3rd Floor",
                  "house_name": "Citypoint",
                  "house_number": "65",
                  "street_name": "Haymarket Terrace",
                  "second_street": null,
                  "district": null,
                  "city": "Edinburgh",
                  "province": null,
                  "postcode": "EH12 5HD",
                  "country": "GB"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/assignees": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId"
        }
      ],
      "get": {
        "summary": "List all assignees for a client",
        "description": "List all assignees for a client.",
        "operationId": "get-clients-id-assignees",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Client Assignees"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/User-2"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "user": {
                                    "$ref": "#/components/schemas/User"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "assignee",
                      "id": 34535,
                      "type": "user",
                      "user": {
                        "object": "user",
                        "id": 121,
                        "name": "Lorraine Baines",
                        "email": "lorraine@example.com",
                        "is_verified": true,
                        "is_disabled": false,
                        "created_at": "2019-08-24T14:15:22Z",
                        "updated_at": "2019-08-24T14:15:22Z"
                      }
                    },
                    {
                      "object": "assignee",
                      "id": 34538,
                      "type": "user",
                      "user": {
                        "object": "user",
                        "id": 472,
                        "name": "Dennis Jones",
                        "email": "dennis@example.com",
                        "is_verified": true,
                        "is_disabled": false,
                        "created_at": "2019-08-25T11:11:07Z",
                        "updated_at": "2019-08-25T11:11:07Z"
                      }
                    }
                  ],
                  "total": 2,
                  "count": 2,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Set assignees for a client",
        "description": "Set the assignees for a client according to the exact values provided in the request, overwriting any existing assignees. To add additional assignees, refer to **[Update assignees for a client](#tag/Client-Assignees/operation/patch-clients-id-assignees)**.",
        "operationId": "post-clients-id-assignees",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Client Assignees"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/User-2"
                    },
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "user"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "user": {
                          "type": "integer"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              },
              "example": [
                {
                  "type": "user",
                  "user": 121
                },
                {
                  "type": "user",
                  "user": 472
                }
              ]
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema"
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "assignee",
                      "id": 34535,
                      "type": "user",
                      "user": {
                        "object": "user",
                        "id": 121,
                        "name": "Lorraine Baines",
                        "email": "lorraine@example.com",
                        "is_verified": true,
                        "is_disabled": false,
                        "created_at": "2019-08-24T14:15:22Z",
                        "updated_at": "2019-08-24T14:15:22Z"
                      }
                    },
                    {
                      "object": "assignee",
                      "id": 34538,
                      "type": "user",
                      "user": {
                        "object": "user",
                        "id": 472,
                        "name": "Dennis Jones",
                        "email": "dennis@example.com",
                        "is_verified": true,
                        "is_disabled": false,
                        "created_at": "2019-08-25T11:11:07Z",
                        "updated_at": "2019-08-25T11:11:07Z"
                      }
                    }
                  ],
                  "total": 2,
                  "count": 2,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update assignees for a client",
        "description": "Add one or more assignees to a client, merging them with existing assignees.",
        "operationId": "patch-clients-id-assignees",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Client Assignees"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/User-2",
                      "required": [
                        "type",
                        "user"
                      ],
                      "properties": {
                        "user": {
                          "type": "integer"
                        }
                      }
                    }
                  ]
                }
              },
              "example": [
                {
                  "type": "user",
                  "user": 523
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema"
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "assignee",
                      "id": 34535,
                      "type": "user",
                      "user": {
                        "object": "user",
                        "id": 121,
                        "name": "Lorraine Baines",
                        "email": "lorraine@example.com",
                        "is_verified": true,
                        "is_disabled": false,
                        "created_at": "2019-08-24T14:15:22Z",
                        "updated_at": "2019-08-24T14:15:22Z"
                      }
                    },
                    {
                      "object": "assignee",
                      "id": 34538,
                      "type": "user",
                      "user": {
                        "object": "user",
                        "id": 472,
                        "name": "Dennis Jones",
                        "email": "dennis@example.com",
                        "is_verified": true,
                        "is_disabled": false,
                        "created_at": "2019-08-25T11:11:07Z",
                        "updated_at": "2019-08-25T11:11:07Z"
                      }
                    },
                    {
                      "object": "assignee",
                      "id": 34541,
                      "type": "user",
                      "user": {
                        "object": "user",
                        "id": 523,
                        "name": "Clara Clayton",
                        "email": "clara@example.com",
                        "is_verified": true,
                        "is_disabled": false,
                        "created_at": "2019-08-25T13:54:32Z",
                        "updated_at": "2019-08-25T13:54:32Z"
                      }
                    }
                  ],
                  "total": 3,
                  "count": 3,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "$ref": "#/components/responses/200"
          }
        }
      },
      "delete": {
        "summary": "Delete assignees for a client",
        "description": "Remove all assignees from a client.",
        "operationId": "delete-clients-id-assignees",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Client Assignees"
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/clients/{clientId}/assignees/{assigneeId}": {
      "delete": {
        "summary": "Delete an assignee for a client",
        "description": "Remove a single assignee from a client.",
        "operationId": "delete-clients-clientId-assignees-assigneeId",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Client Assignees"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "assigneeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/clients/{id}/organisations": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId",
          "description": "Unique client identifier"
        }
      ],
      "get": {
        "summary": "List all organisations for a client",
        "description": "Returns a paginated list of a client's organisation memberships.\n\nTo retrieve organisations for the team, refer to **[List all organisations](#tag/Organisations/operation/get-organisations)**.\n",
        "operationId": "get-clients-id-organisations",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Client Organisations"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/Organisation"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "organisation",
                      "id": 3970,
                      "name": "Probert Publishing",
                      "company_number": "SF12188",
                      "jurisdiction": "gb",
                      "created_at": "2022-03-15T21:43:16Z",
                      "updated_at": "2022-03-15T21:43:16Z"
                    }
                  ],
                  "total": 1,
                  "count": 1,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "default": "Client not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update organisations for a client",
        "description": "Add the client to one or more organisations, merging them with existing organisation memberships.\n\nTo update an organisation's basic details, refer to **[Update an organisation](#tag/Organisations/operation/patch-organisations-id)**.\n",
        "operationId": "patch-clients-id-organisations",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Client Organisations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "minItems": 1,
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Unique organisation identifier"
                }
              },
              "example": [
                4117
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/Organisation"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "organisation",
                      "id": 3970,
                      "name": "Probert Publishing",
                      "company_number": "SF12188",
                      "jurisdiction": "gb",
                      "created_at": "2022-03-15T21:43:16Z",
                      "updated_at": "2022-03-15T21:43:16Z"
                    },
                    {
                      "object": "organisation",
                      "id": 4117,
                      "name": "CusCo",
                      "company_number": "11249",
                      "jurisdiction": "us_ca",
                      "created_at": "2022-03-20T13:12:41Z",
                      "updated_at": "2022-03-20T13:12:41Z"
                    }
                  ],
                  "total": 2,
                  "count": 2,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "default": "Client not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Replace organisations for a client",
        "description": "Replaces a client's organisation memberships.",
        "operationId": "put-clients-id-organisations",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Client Organisations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "minItems": 1,
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Unique organisation identifier"
                }
              },
              "example": [
                3970,
                4117
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/Organisation"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "organisation",
                      "id": 3970,
                      "name": "Probert Publishing",
                      "company_number": "SF12188",
                      "jurisdiction": "gb",
                      "created_at": "2022-03-15T21:43:16Z",
                      "updated_at": "2022-03-15T21:43:16Z"
                    },
                    {
                      "object": "organisation",
                      "id": 4117,
                      "name": "CusCo",
                      "company_number": "11249",
                      "jurisdiction": "us_ca",
                      "created_at": "2022-03-20T13:12:41Z",
                      "updated_at": "2022-03-20T13:12:41Z"
                    }
                  ],
                  "total": 2,
                  "count": 2,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "default": "Client not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete organisations for a client",
        "description": "Delete all of a client's organisation memberships.",
        "operationId": "delete-clients-id-organisations",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Client Organisations"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "default": "Client not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clients/{clientId}/organisations/{organisationId}": {
      "delete": {
        "summary": "Delete organisation for a client",
        "description": "Delete a single client organisation membership.",
        "operationId": "get-clients-clientId-organisations-organisationId",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Client Organisations"
        ],
        "parameters": [
          {
            "name": "clientId",
            "description": "Unique client identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "organisationId",
            "description": "Unique organisation identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "Client not found",
                        "Organisation not found"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/forms": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId"
        }
      ],
      "get": {
        "summary": "List all forms for a client",
        "description": "List all forms for a client.",
        "operationId": "get-clients-id-forms",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Clients"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "expand",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "client",
                  "record"
                ]
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by internal client forms (`internal`), or requested for completion by the client (`requested`). Includes both by default.",
            "schema": {
              "type": "string",
              "enum": [
                "internal",
                "requested"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/ClientForm"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "client_form",
                      "id": 37344,
                      "reference": "2ddb20b8-e0e3-45ae-a638-42610b990a6a",
                      "type": "requested",
                      "client": 73212,
                      "record": 87564,
                      "name": "New starter form",
                      "description": null,
                      "instructions": null,
                      "fields": [
                        {
                          "id": "1",
                          "type": "section",
                          "label": "",
                          "fields": [
                            "2"
                          ]
                        },
                        {
                          "id": "2",
                          "type": "section",
                          "label": "Onboarding",
                          "fields": [
                            "3",
                            "4"
                          ]
                        },
                        {
                          "id": "3",
                          "type": "text",
                          "label": "Job title",
                          "validation": [
                            "required"
                          ],
                          "flag": false,
                          "value": null
                        },
                        {
                          "id": "4",
                          "type": "radio",
                          "label": {
                            "value": "Contract type",
                            "options": [
                              "Full-time",
                              "Part-time"
                            ]
                          },
                          "validation": [
                            "required"
                          ],
                          "flag": false,
                          "value": null
                        }
                      ],
                      "version": 1,
                      "created_at": "2022-10-11T13:41:38Z",
                      "updated_at": "2022-10-11T13:41:38Z",
                      "completed_at": null,
                      "archived_at": null
                    },
                    {
                      "object": "client_form",
                      "id": 37523,
                      "reference": "4fdb5ab5-f83e-4b52-926b-340e880bb030",
                      "type": "internal",
                      "client": 73212,
                      "record": null,
                      "name": "Onboarding checklist",
                      "description": "Checklist for all new employees.",
                      "instructions": null,
                      "fields": [
                        {
                          "id": "1",
                          "type": "section",
                          "label": "",
                          "fields": [
                            "2",
                            "3"
                          ]
                        },
                        {
                          "id": "2",
                          "type": "radio",
                          "label": {
                            "value": "Location",
                            "options": [
                              "Office",
                              "Remote",
                              "Hybrid"
                            ]
                          },
                          "validation": [
                            "required"
                          ],
                          "flag": false,
                          "value": "Remote"
                        },
                        {
                          "id": "3",
                          "type": "radio",
                          "label": {
                            "value": "Department",
                            "options": [
                              "Sales",
                              "Marketing",
                              "Legal",
                              "Admin"
                            ]
                          },
                          "validation": [
                            "required"
                          ],
                          "flag": false,
                          "value": "Admin"
                        }
                      ],
                      "version": 2,
                      "created_at": "2022-11-02T15:55:38Z",
                      "updated_at": "2022-11-05T20:02:06Z",
                      "completed_at": null,
                      "archived_at": null
                    }
                  ],
                  "total": 2,
                  "count": 2,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/forms/{reference}": {
      "get": {
        "summary": "Retrieve a form for a client",
        "description": "Retrieve a form for a client.",
        "operationId": "get-clients-id-forms-reference",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Clients"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceId"
          },
          {
            "name": "reference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientForm"
                },
                "examples": {
                  "requested": {
                    "summary": "Requested form",
                    "description": "A form for completion by the client",
                    "value": {
                      "object": "client_form",
                      "id": 37344,
                      "reference": "2ddb20b8-e0e3-45ae-a638-42610b990a6a",
                      "type": "requested",
                      "client": 73212,
                      "record": 87564,
                      "name": "New starter form",
                      "description": null,
                      "instructions": null,
                      "fields": [
                        {
                          "id": "1",
                          "type": "section",
                          "label": "",
                          "fields": [
                            "2"
                          ]
                        },
                        {
                          "id": "2",
                          "type": "section",
                          "label": "Onboarding",
                          "fields": [
                            "3",
                            "4"
                          ]
                        },
                        {
                          "id": "3",
                          "type": "text",
                          "label": "Job title",
                          "validation": [
                            "required"
                          ],
                          "flag": false,
                          "value": null
                        },
                        {
                          "id": "4",
                          "type": "radio",
                          "label": {
                            "value": "Contract type",
                            "options": [
                              "Full-time",
                              "Part-time"
                            ]
                          },
                          "validation": [
                            "required"
                          ],
                          "flag": false,
                          "value": null
                        }
                      ],
                      "version": 1,
                      "created_at": "2022-10-11T13:41:38Z",
                      "updated_at": "2022-10-11T13:41:38Z",
                      "completed_at": null,
                      "archived_at": null
                    }
                  },
                  "internal": {
                    "summary": "Internal form",
                    "description": "A form for internal data collection",
                    "value": {
                      "object": "client_form",
                      "id": 37523,
                      "reference": "4fdb5ab5-f83e-4b52-926b-340e880bb030",
                      "type": "internal",
                      "client": 73212,
                      "record": null,
                      "name": "Onboarding checklist",
                      "description": "Checklist for all new employees.",
                      "instructions": null,
                      "fields": [
                        {
                          "id": "1",
                          "type": "section",
                          "label": "",
                          "fields": [
                            "2",
                            "3"
                          ]
                        },
                        {
                          "id": "2",
                          "type": "radio",
                          "label": {
                            "value": "Location",
                            "options": [
                              "Office",
                              "Remote",
                              "Hybrid"
                            ]
                          },
                          "validation": [
                            "required"
                          ],
                          "flag": false,
                          "value": "Remote"
                        },
                        {
                          "id": "3",
                          "type": "radio",
                          "label": {
                            "value": "Department",
                            "options": [
                              "Sales",
                              "Marketing",
                              "Legal",
                              "Admin"
                            ]
                          },
                          "validation": [
                            "required"
                          ],
                          "flag": false,
                          "value": "Admin"
                        }
                      ],
                      "version": 2,
                      "created_at": "2022-11-02T15:55:38Z",
                      "updated_at": "2022-11-05T20:02:06Z",
                      "completed_at": null,
                      "archived_at": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/forms/{reference}/download": {
      "get": {
        "summary": "Download a form for a client",
        "description": "Download a form for a client.",
        "operationId": "get-clients-id-forms-reference-download",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Clients"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceId"
          },
          {
            "name": "reference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/records": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId"
        }
      ],
      "get": {
        "summary": "List all records for a client",
        "description": "List all records for a client.",
        "operationId": "get-clients-id-records",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Clients"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "expand",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "client"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/Record"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "record",
                      "id": 983434,
                      "status": "pending",
                      "email": "marty@example.com",
                      "steps": [
                        {
                          "object": "step",
                          "id": 2,
                          "type": "check.photo_id",
                          "preferences": {
                            "report_type": "standard",
                            "face": true,
                            "liveness": true,
                            "facial_similarity": false,
                            "live_document": false,
                            "docs": [
                              "passport",
                              "driving_licence",
                              "national_id"
                            ]
                          },
                          "check": 82342,
                          "cost": 1,
                          "completed_at": null
                        },
                        {
                          "object": "step",
                          "id": 3,
                          "type": "document.request",
                          "preferences": {
                            "title": "Utility bill",
                            "instructions": "A utility bill dated within the last three months."
                          },
                          "document": 23123,
                          "cost": 0,
                          "completed_at": null
                        },
                        {
                          "object": "step",
                          "id": 4,
                          "type": "form",
                          "form": "4bd9bfca-e61d-4a68-99b3-ca61a02f650f",
                          "cost": 0,
                          "completed_at": null
                        }
                      ],
                      "client": 73845,
                      "created_at": "2022-05-22T08:22:12Z",
                      "updated_at": "2022-05-22T08:22:12Z",
                      "archived_at": null
                    }
                  ],
                  "total": 1,
                  "count": 1,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/files": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId"
        }
      ],
      "get": {
        "summary": "List all files for a client",
        "description": "List all files for a client.",
        "operationId": "get-clients-id-files",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Clients"
        ],
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "source"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/ClientFile"
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "internal": {
                    "summary": "Internal",
                    "description": "An internal file attached directly to the client.",
                    "value": {
                      "object": "paginated_list",
                      "data": [
                        {
                          "object": "client_file",
                          "id": 31788,
                          "type": "internal",
                          "source": {
                            "id": 31788,
                            "type": "client"
                          },
                          "name": "73db4d13-6c1b-40b1-94fc-2cf6d7ac22d2.pdf",
                          "attachment": {
                            "object": "attachment",
                            "id": 31782,
                            "name": "73db4d13-6c1b-40b1-94fc-2cf6d7ac22d2.pdf",
                            "original": "NDA-final.pdf",
                            "type": "application/pdf",
                            "size": 16053,
                            "av_status": "clean",
                            "created_at": "2019-08-24T14:15:22Z",
                            "updated_at": "2019-08-24T14:15:22Z"
                          },
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      ],
                      "total": 1,
                      "count": 1,
                      "limit": 100,
                      "current_page": 1,
                      "total_pages": 1,
                      "links": null
                    }
                  },
                  "record": {
                    "summary": "Record documents",
                    "description": "Files associated with a sent and returned document.",
                    "value": {
                      "object": "paginated_list",
                      "data": [
                        {
                          "object": "client_file",
                          "id": 31431,
                          "type": "sent",
                          "source": {
                            "id": 133144,
                            "type": "record_document"
                          },
                          "name": "186a4641-337a-4a1f-86ba-0bc6d81a3ed4.pdf",
                          "attachment": {
                            "object": "attachment",
                            "id": 31431,
                            "name": "186a4641-337a-4a1f-86ba-0bc6d81a3ed4.pdf",
                            "original": "NDA-final.pdf",
                            "type": "application/pdf",
                            "size": 265434,
                            "av_status": "clean",
                            "created_at": "2020-03-11T12:43:55Z",
                            "updated_at": "2020-03-11T12:43:55Z"
                          },
                          "created_at": "2020-03-11T12:43:55Z",
                          "updated_at": "2020-03-11T12:43:55Z"
                        },
                        {
                          "object": "client_file",
                          "id": 31432,
                          "type": "received",
                          "source": {
                            "id": 133145,
                            "type": "record_document"
                          },
                          "name": "cd349cd8-28e9-4e71-bc46-e99726b7b914.pdf",
                          "attachment": {
                            "object": "attachment",
                            "id": 31432,
                            "name": "cd349cd8-28e9-4e71-bc46-e99726b7b914.pdf",
                            "original": "NDA-final(signed).pdf",
                            "type": "application/pdf",
                            "size": 278311,
                            "av_status": "clean",
                            "created_at": "2020-03-12T06:31:46Z",
                            "updated_at": "2020-03-12T06:31:46Z"
                          },
                          "created_at": "2020-03-12T06:31:46Z",
                          "updated_at": "2020-03-12T06:31:46Z"
                        }
                      ],
                      "total": 2,
                      "count": 2,
                      "limit": 100,
                      "current_page": 1,
                      "total_pages": 1,
                      "links": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clients/{clientId}/files/{fileId}/download": {
      "get": {
        "summary": "Download a file for a client",
        "description": "Download a file for a client.",
        "operationId": "get-clients-clientId-files-fileId-download",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Clients"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/organisations": {
      "get": {
        "summary": "Retrieve all organisations",
        "description": "Returns a paginated list of the team's organisations.\n\nTo retrieve a specific client's organisations, refer to **[List all organisations for a client](#tag/Client-Organisations/operation/get-clients-id-organisations)**.\n",
        "operationId": "get-organisations",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Organisations"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/Organisation"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "organisation",
                      "id": 3970,
                      "name": "Probert Publishing",
                      "company_number": "SF12188",
                      "jurisdiction": "gb",
                      "created_at": "2022-03-15T21:43:16Z",
                      "updated_at": "2022-03-15T21:43:16Z"
                    }
                  ],
                  "total": 1,
                  "count": 1,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "summary": "Create an organisation",
        "description": "Create a new organisation.",
        "operationId": "post-organisations",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Organisations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Organisation"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "jurisdiction": {
                        "description": "Required with `company_number`"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                ]
              },
              "example": {
                "name": "Probert Publishing",
                "company_number": "SF12188",
                "jurisdiction": "gb"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                },
                "example": {
                  "object": "organisation",
                  "id": 3970,
                  "name": "Probert Publishing",
                  "company_number": "SF12188",
                  "jurisdiction": "gb",
                  "created_at": "2022-03-15T21:43:16Z",
                  "updated_at": "2022-03-15T21:43:16Z"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        }
      }
    },
    "/organisations/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId",
          "description": "Unique organisation identifier"
        }
      ],
      "get": {
        "summary": "Retrieve an organisation",
        "description": "Returns a single organisation.",
        "operationId": "get-organisations-id",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Organisations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                },
                "example": {
                  "object": "organisation",
                  "id": 3970,
                  "name": "Probert Publishing",
                  "company_number": "SF12188",
                  "jurisdiction": "gb",
                  "created_at": "2022-03-15T21:43:16Z",
                  "updated_at": "2022-03-15T21:43:16Z"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "default": "Organisation not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update an organisation",
        "description": "Update the details of an organisation.\n\nTo add clients to or remove clients from the organisation, refer to **[Update organisations for a client](#tag/Client-Organisations/operation/patch-clients-id-organisations)**.\n",
        "operationId": "patch-organisations-id",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Organisations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Organisation"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "jurisdiction": {
                        "description": "Required with `company_number`"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                ]
              },
              "example": {
                "name": "Probert Publishing Co"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                },
                "example": {
                  "object": "organisation",
                  "id": 3970,
                  "name": "Probert Publishing Co",
                  "company_number": "SF12188",
                  "jurisdiction": "gb",
                  "created_at": "2022-03-15T21:43:16Z",
                  "updated_at": "2022-05-21T09:11:54Z"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "default": "Organisation not found"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        }
      }
    },
    "/records": {
      "get": {
        "summary": "List all records",
        "description": "List all records.",
        "operationId": "get-records",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Records"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "expand",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "client"
                ]
              }
            }
          },
          {
            "name": "status",
            "description": "Filter records by their current status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/RecordStatus"
            }
          },
          {
            "name": "creator",
            "description": "Filter records created by team member user ID",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "assignee",
            "description": "Filter records assigned to team member user ID",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/Record"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "record",
                      "id": 983434,
                      "status": "pending",
                      "email": "marty@example.com",
                      "steps": [
                        {
                          "object": "step",
                          "id": 2,
                          "type": "check.photo_id",
                          "preferences": {
                            "report_type": "standard",
                            "face": true,
                            "liveness": true,
                            "facial_similarity": false,
                            "live_document": false,
                            "docs": [
                              "passport",
                              "driving_licence",
                              "national_id"
                            ]
                          },
                          "check": 82342,
                          "cost": 1,
                          "completed_at": null
                        },
                        {
                          "object": "step",
                          "id": 3,
                          "type": "document.request",
                          "preferences": {
                            "title": "Utility bill",
                            "instructions": "A utility bill dated within the last three months."
                          },
                          "document": 23123,
                          "cost": 0,
                          "completed_at": null
                        },
                        {
                          "object": "step",
                          "id": 4,
                          "type": "form",
                          "form": "4bd9bfca-e61d-4a68-99b3-ca61a02f650f",
                          "cost": 0,
                          "completed_at": null
                        }
                      ],
                      "client": 73845,
                      "created_at": "2022-05-22T08:22:12Z",
                      "updated_at": "2022-05-22T08:22:12Z",
                      "archived_at": null
                    }
                  ],
                  "total": 1,
                  "count": 1,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a record",
        "description": "Create a record.",
        "operationId": "post-records",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Records"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Record"
                },
                "example": {
                  "object": "record",
                  "id": 983434,
                  "status": "pending",
                  "perform_url": "https://id.amiqus.co/i/0vz32B9CZpO1yLsKPdy9q",
                  "email": "marty@example.com",
                  "steps": [
                    {
                      "object": "step",
                      "id": 2,
                      "type": "check.photo_id",
                      "preferences": {
                        "report_type": "standard",
                        "face": true,
                        "liveness": true,
                        "facial_similarity": false,
                        "live_document": false,
                        "docs": [
                          "passport",
                          "driving_licence",
                          "national_id"
                        ]
                      },
                      "check": 82342,
                      "cost": 1,
                      "completed_at": null
                    },
                    {
                      "object": "step",
                      "id": 3,
                      "type": "document.request",
                      "preferences": {
                        "title": "Utility bill",
                        "instructions": "A utility bill dated within the last three months."
                      },
                      "document": 23123,
                      "cost": 0,
                      "completed_at": null
                    },
                    {
                      "object": "step",
                      "id": 4,
                      "type": "form",
                      "form": "4bd9bfca-e61d-4a68-99b3-ca61a02f650f",
                      "cost": 0,
                      "completed_at": null
                    }
                  ],
                  "client": 73845,
                  "created_at": "2022-05-22T08:22:12Z",
                  "updated_at": "2022-05-22T08:22:12Z",
                  "archived_at": null
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "title": "Manual",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "client"
                        ],
                        "properties": {
                          "client": {
                            "type": "integer"
                          }
                        }
                      },
                      {
                        "$ref": "#/components/schemas/RecordSettings"
                      }
                    ]
                  },
                  {
                    "title": "Template",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "client",
                          "template"
                        ],
                        "properties": {
                          "client": {
                            "type": "integer"
                          },
                          "template": {
                            "type": "integer",
                            "description": "Create a record using an existing [record template ID](#tag/Templates/operation/get-templates-records).\n"
                          },
                          "assignees": {
                            "type": "boolean",
                            "default": true,
                            "description": "Automatically assign team members defined in the record template to the new record."
                          }
                        }
                      }
                    ]
                  }
                ]
              },
              "examples": {
                "simple": {
                  "summary": "Single step",
                  "description": "A request with a single step containing a Photo ID check",
                  "value": {
                    "client": 7832,
                    "steps": [
                      {
                        "type": "check.photo_id",
                        "preferences": {
                          "report_type": "standard",
                          "face": true,
                          "docs": [
                            "passport",
                            "driving_licence"
                          ]
                        }
                      }
                    ],
                    "notification": "email"
                  }
                },
                "advanced": {
                  "summary": "Multiple steps",
                  "description": "A request with a multiple steps including checks and documents",
                  "value": {
                    "client": 34853,
                    "steps": [
                      {
                        "type": "check.photo_id",
                        "preferences": {
                          "report_type": "biometric"
                        }
                      },
                      {
                        "type": "check.criminal_record",
                        "preferences": {
                          "region": "england",
                          "type": "standard"
                        }
                      },
                      {
                        "type": "document.request",
                        "preferences": {
                          "template": 15478
                        }
                      },
                      {
                        "type": "form",
                        "preferences": {
                          "form": "f11b16cd-a03c-4c7e-a151-14b5e1463846"
                        }
                      }
                    ],
                    "notification": "email",
                    "message": "Please complete the following request to begin onboarding with Fusion Industries.",
                    "reminder": true
                  }
                },
                "template": {
                  "summary": "Template",
                  "description": "Use an existing record template",
                  "value": {
                    "client": 34853,
                    "template": 43723
                  }
                }
              }
            }
          }
        }
      }
    },
    "/records/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId"
        }
      ],
      "get": {
        "summary": "Retrieve a record",
        "description": "Retrieve a record.",
        "operationId": "get-records-id",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Records"
        ],
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "client"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Record"
                },
                "example": {
                  "object": "record",
                  "id": 983434,
                  "status": "pending",
                  "perform_url": "https://id.amiqus.co/i/0vz32B9CZpO1yLsKPdy9q",
                  "email": "marty@example.com",
                  "steps": [
                    {
                      "object": "step",
                      "id": 2,
                      "type": "check.photo_id",
                      "preferences": {
                        "report_type": "standard",
                        "face": true,
                        "liveness": true,
                        "facial_similarity": false,
                        "live_document": false,
                        "docs": [
                          "passport",
                          "driving_licence",
                          "national_id"
                        ]
                      },
                      "check": 82342,
                      "cost": 1,
                      "completed_at": null
                    },
                    {
                      "object": "step",
                      "id": 3,
                      "type": "document.request",
                      "preferences": {
                        "title": "Utility bill",
                        "instructions": "A utility bill dated within the last three months."
                      },
                      "document": 23123,
                      "cost": 0,
                      "completed_at": null
                    },
                    {
                      "object": "step",
                      "id": 4,
                      "type": "form",
                      "form": "4bd9bfca-e61d-4a68-99b3-ca61a02f650f",
                      "cost": 0,
                      "completed_at": null
                    }
                  ],
                  "client": 73845,
                  "created_at": "2022-05-22T08:22:12Z",
                  "updated_at": "2022-05-22T08:22:12Z",
                  "archived_at": null
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a record",
        "description": "Update the details of a record.\n\nTo mark a record as expired, refer to **[Expire a record](#tag/Records/operation/post-records-id-expire)**.\n",
        "operationId": "patch-records-id",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Records"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "minProperties": 1,
                "properties": {
                  "is_archived": {
                    "type": "boolean",
                    "description": "Allows toggling of archived state"
                  },
                  "is_reviewed": {
                    "type": "boolean",
                    "description": "Allows toggling of reviewed state"
                  }
                }
              },
              "example": {
                "is_archived": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Record"
                },
                "example": {
                  "object": "record",
                  "id": 983434,
                  "status": "pending",
                  "email": "marty@example.com",
                  "steps": [
                    {
                      "object": "step",
                      "id": 2,
                      "type": "check.photo_id",
                      "preferences": {
                        "report_type": "standard",
                        "face": true,
                        "liveness": true,
                        "facial_similarity": false,
                        "live_document": false,
                        "docs": [
                          "passport",
                          "driving_licence",
                          "national_id"
                        ]
                      },
                      "check": 82342,
                      "cost": 1,
                      "completed_at": null
                    },
                    {
                      "object": "step",
                      "id": 3,
                      "type": "document.request",
                      "preferences": {
                        "title": "Utility bill",
                        "instructions": "A utility bill dated within the last three months."
                      },
                      "document": 23123,
                      "cost": 0,
                      "completed_at": null
                    },
                    {
                      "object": "step",
                      "id": 4,
                      "type": "form",
                      "form": "4bd9bfca-e61d-4a68-99b3-ca61a02f650f",
                      "cost": 0,
                      "completed_at": null
                    }
                  ],
                  "client": 73845,
                  "created_at": "2022-05-22T08:22:12Z",
                  "updated_at": "2022-05-22T08:22:12Z",
                  "archived_at": "2023-09-15T13:03:11Z"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "default": "Record not found"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        }
      }
    },
    "/records/{id}/archive": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId"
        }
      ],
      "post": {
        "summary": "Archive a record",
        "description": "Archive a record.\n\nThis operation is deprecated and will be removed in future versions. To archive a record, please refer to **[Update a record](#tag/Records/operation/patch-records-id)**.\n",
        "operationId": "post-records-id-archive",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Records"
        ],
        "deprecated": true,
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "client"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Record"
                }
              }
            }
          }
        }
      }
    },
    "/records/{id}/expire": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId"
        }
      ],
      "post": {
        "summary": "Expire a record",
        "description": "Expire a record.",
        "operationId": "post-records-id-expire",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Records"
        ],
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "client"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Record"
                }
              }
            }
          }
        }
      }
    },
    "/records/{id}/download": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId"
        }
      ],
      "get": {
        "summary": "Download a record",
        "description": "Download a record.",
        "operationId": "get-records-id-download",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Records"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/records/{id}/steps": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId"
        }
      ],
      "get": {
        "summary": "List all steps for a record",
        "description": "List all steps for a record.",
        "operationId": "get-records-id-steps",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Records"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "expand",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "check",
                  "form",
                  "document"
                ]
              }
            },
            "examples": {
              "one": {
                "value": [
                  "check"
                ],
                "summary": "Expand one step type"
              },
              "multiple": {
                "value": [
                  "check",
                  "form"
                ],
                "summary": "Expand multiple step types"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/RecordSteps"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "step",
                      "id": 2,
                      "type": "check.photo_id",
                      "preferences": {
                        "report_type": "standard",
                        "face": true,
                        "liveness": true,
                        "facial_similarity": false,
                        "live_document": false,
                        "docs": [
                          "passport",
                          "driving_licence",
                          "national_id"
                        ]
                      },
                      "check": 82342,
                      "cost": 1,
                      "completed_at": null
                    },
                    {
                      "object": "step",
                      "id": 3,
                      "type": "document.request",
                      "preferences": {
                        "title": "Utility bill",
                        "instructions": "A utility bill dated within the last three months."
                      },
                      "document": 23123,
                      "cost": 0,
                      "completed_at": null
                    },
                    {
                      "object": "step",
                      "id": 4,
                      "type": "form",
                      "form": "4bd9bfca-e61d-4a68-99b3-ca61a02f650f",
                      "cost": 0,
                      "completed_at": null
                    }
                  ],
                  "total": 3,
                  "count": 3,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          }
        }
      }
    },
    "/records/{id}/documents": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId"
        }
      ],
      "get": {
        "summary": "List all documents for a record",
        "description": "List all documents for a record.",
        "operationId": "get-records-id-documents",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Records"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "expand",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "attachments"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/RecordDocument"
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "returned": {
                    "summary": "Sent document with a return requirement",
                    "description": "A sent document requested to be returned, with it's completed returned document.",
                    "value": {
                      "object": "paginated_list",
                      "data": [
                        {
                          "object": "record_document",
                          "id": 3245,
                          "type": "sent",
                          "name": "3e337df9-872a-4753-b86a-87cb535ee16d.pdf",
                          "status": "complete",
                          "config": {
                            "require_return": true,
                            "require_confirmation": false,
                            "instructions": "Non-disclosure agreement",
                            "return_message": "Please sign and return the NDA."
                          },
                          "source": {
                            "type": "record",
                            "id": 456884
                          },
                          "attachments": [
                            {
                              "object": "attachment",
                              "id": 1267,
                              "name": "1d420ac7-a87a-444a-936b-dc29991ab8ed.pdf",
                              "original": "NDA-final.pdf",
                              "type": "application/pdf",
                              "size": 74590,
                              "av_status": "clean",
                              "created_at": "2022-08-24T14:15:22Z",
                              "updated_at": "2022-08-24T14:15:22Z"
                            }
                          ],
                          "created_at": "2022-08-24T14:15:22Z",
                          "updated_at": "2022-08-24T14:15:22Z",
                          "completed_at": "2022-08-25T11:02:13Z"
                        },
                        {
                          "object": "record_document",
                          "id": 3389,
                          "type": "returned",
                          "name": "35adbb44-be59-450c-bc41-fb32bded8e86.pdf",
                          "status": "complete",
                          "config": null,
                          "source": {
                            "type": "record_document",
                            "id": 3245
                          },
                          "attachments": [
                            {
                              "object": "attachment",
                              "id": 1484,
                              "name": "35adbb44-be59-450c-bc41-fb32bded8e86.pdf",
                              "original": "NDA-final (signed).pdf",
                              "type": "application/pdf",
                              "size": 78448,
                              "av_status": "clean",
                              "created_at": "2022-08-25T11:02:13Z",
                              "updated_at": "2022-08-25T11:02:13Z"
                            }
                          ],
                          "created_at": "2022-08-24T14:15:22Z",
                          "updated_at": "2022-08-25T11:02:13Z",
                          "completed_at": "2022-08-25T11:02:13Z"
                        }
                      ],
                      "total": 2,
                      "count": 2,
                      "limit": 100,
                      "current_page": 1,
                      "total_pages": 1,
                      "links": null
                    }
                  },
                  "sent": {
                    "summary": "Sent document",
                    "description": "A document sent that has not yet been downloaded",
                    "value": {
                      "object": "paginated_list",
                      "data": [
                        {
                          "object": "record_document",
                          "id": 3015,
                          "type": "sent",
                          "name": "7081ef74-44e8-4ee4-9371-023b5a146639.pdf",
                          "status": "pending",
                          "config": {
                            "require_return": false,
                            "require_confirmation": false,
                            "instructions": "Terms and conditions of rental agreement.",
                            "return_message": null
                          },
                          "source": {
                            "type": "record",
                            "id": 442103
                          },
                          "attachments": [
                            {
                              "object": "attachment",
                              "id": 1267,
                              "name": "8162343a-9478-46fb-a342-a1de74e8da5f.pdf",
                              "original": "TOCs.pdf",
                              "type": "application/pdf",
                              "size": 84564,
                              "av_status": "clean",
                              "created_at": "2022-08-11T10:12:01Z",
                              "updated_at": "2022-08-11T10:12:01Z"
                            }
                          ],
                          "created_at": "2022-08-11T10:12:01Z",
                          "updated_at": "2022-08-11T10:12:01Z",
                          "completed_at": null
                        }
                      ],
                      "total": 1,
                      "count": 1,
                      "limit": 100,
                      "current_page": 1,
                      "total_pages": 1,
                      "links": null
                    }
                  },
                  "sent_collapsed": {
                    "summary": "Sent document (collapsed attachments)",
                    "description": "Sent document without expanded attachments",
                    "value": {
                      "object": "paginated_list",
                      "data": [
                        {
                          "object": "record_document",
                          "id": 3015,
                          "type": "sent",
                          "name": "7081ef74-44e8-4ee4-9371-023b5a146639.pdf",
                          "status": "pending",
                          "config": {
                            "require_return": false,
                            "require_confirmation": false,
                            "instructions": "Terms and conditions of rental agreement.",
                            "return_message": null
                          },
                          "source": {
                            "type": "record",
                            "id": 442103
                          },
                          "attachments": [
                            1267
                          ],
                          "created_at": "2022-08-11T10:12:01Z",
                          "updated_at": "2022-08-11T10:12:01Z",
                          "completed_at": null
                        }
                      ],
                      "total": 1,
                      "count": 1,
                      "limit": 100,
                      "current_page": 1,
                      "total_pages": 1,
                      "links": null
                    }
                  },
                  "requested": {
                    "summary": "Requested document",
                    "description": "A request for a document to be uploaded",
                    "value": {
                      "object": "paginated_list",
                      "data": [
                        {
                          "object": "record_document",
                          "id": 5481,
                          "type": "requested",
                          "name": "3e337df9-872a-4753-b86a-87cb535ee16d.pdf",
                          "status": "pending",
                          "config": {
                            "instructions": "A utility bill dated within the last three months."
                          },
                          "source": {
                            "type": "record",
                            "id": 3247
                          },
                          "attachments": null,
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "completed_at": null
                        }
                      ],
                      "total": 1,
                      "count": 1,
                      "limit": 100,
                      "current_page": 1,
                      "total_pages": 1,
                      "links": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/records/{id}/assignees": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId"
        }
      ],
      "get": {
        "summary": "List all assignees for a record",
        "description": "List all assignees for a record.",
        "operationId": "get-records-id-assignees",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Record Assignees"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/User-2"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "user": {
                                    "$ref": "#/components/schemas/User"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "assignee",
                      "id": 34535,
                      "type": "user",
                      "user": {
                        "object": "user",
                        "id": 121,
                        "name": "Lorraine Baines",
                        "email": "lorraine@example.com",
                        "is_verified": true,
                        "is_disabled": false,
                        "created_at": "2019-08-24T14:15:22Z",
                        "updated_at": "2019-08-24T14:15:22Z"
                      }
                    },
                    {
                      "object": "assignee",
                      "id": 34538,
                      "type": "user",
                      "user": {
                        "object": "user",
                        "id": 472,
                        "name": "Dennis Jones",
                        "email": "dennis@example.com",
                        "is_verified": true,
                        "is_disabled": false,
                        "created_at": "2019-08-25T11:11:07Z",
                        "updated_at": "2019-08-25T11:11:07Z"
                      }
                    }
                  ],
                  "total": 2,
                  "count": 2,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Set assignees for a record",
        "description": "Set the assignees for a record according to the exact values provided in the request, overwriting any existing assignees. To add additional assignees, refer to **[Update assignees for a record](#tag/Record-Assignees/operation/patch-records-id-assignees)**.",
        "operationId": "post-records-id-assignees",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Record Assignees"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/User-2"
                    },
                    {
                      "type": "object",
                      "required": [
                        "type",
                        "user"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "user": {
                          "type": "integer"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              },
              "example": [
                {
                  "type": "user",
                  "user": 121
                },
                {
                  "type": "user",
                  "user": 472
                }
              ]
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema"
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "assignee",
                      "id": 34535,
                      "type": "user",
                      "user": {
                        "object": "user",
                        "id": 121,
                        "name": "Lorraine Baines",
                        "email": "lorraine@example.com",
                        "is_verified": true,
                        "is_disabled": false,
                        "created_at": "2019-08-24T14:15:22Z",
                        "updated_at": "2019-08-24T14:15:22Z"
                      }
                    },
                    {
                      "object": "assignee",
                      "id": 34538,
                      "type": "user",
                      "user": {
                        "object": "user",
                        "id": 472,
                        "name": "Dennis Jones",
                        "email": "dennis@example.com",
                        "is_verified": true,
                        "is_disabled": false,
                        "created_at": "2019-08-25T11:11:07Z",
                        "updated_at": "2019-08-25T11:11:07Z"
                      }
                    }
                  ],
                  "total": 2,
                  "count": 2,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update assignees for a record",
        "description": "Add one or more assignees to a record, merging them with existing assignees.",
        "operationId": "patch-records-id-assignees",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Record Assignees"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/User-2",
                      "required": [
                        "type",
                        "user"
                      ],
                      "properties": {
                        "user": {
                          "type": "integer"
                        }
                      }
                    }
                  ]
                }
              },
              "example": [
                {
                  "type": "user",
                  "user": 523
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema"
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "assignee",
                      "id": 34535,
                      "type": "user",
                      "user": {
                        "object": "user",
                        "id": 121,
                        "name": "Lorraine Baines",
                        "email": "lorraine@example.com",
                        "is_verified": true,
                        "is_disabled": false,
                        "created_at": "2019-08-24T14:15:22Z",
                        "updated_at": "2019-08-24T14:15:22Z"
                      }
                    },
                    {
                      "object": "assignee",
                      "id": 34538,
                      "type": "user",
                      "user": {
                        "object": "user",
                        "id": 472,
                        "name": "Dennis Jones",
                        "email": "dennis@example.com",
                        "is_verified": true,
                        "is_disabled": false,
                        "created_at": "2019-08-25T11:11:07Z",
                        "updated_at": "2019-08-25T11:11:07Z"
                      }
                    },
                    {
                      "object": "assignee",
                      "id": 34541,
                      "type": "user",
                      "user": {
                        "object": "user",
                        "id": 523,
                        "name": "Clara Clayton",
                        "email": "clara@example.com",
                        "is_verified": true,
                        "is_disabled": false,
                        "created_at": "2019-08-25T13:54:32Z",
                        "updated_at": "2019-08-25T13:54:32Z"
                      }
                    }
                  ],
                  "total": 3,
                  "count": 3,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "$ref": "#/components/responses/200"
          }
        }
      },
      "delete": {
        "summary": "Delete assignees for a record",
        "description": "Remove all assignees from a record.",
        "operationId": "delete-records-id-assignees",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Record Assignees"
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/records/{recordId}/assignees/{assigneeId}": {
      "delete": {
        "summary": "Delete assignee for a record",
        "description": "Remove a single assignee from a record.",
        "operationId": "delete-records-recordId-assignees-assigneeId",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Record Assignees"
        ],
        "parameters": [
          {
            "name": "recordId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "assigneeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/teams/{teamId}/members": {
      "get": {
        "summary": "List all team members",
        "description": "List all team members.",
        "operationId": "get-teams-teamId-members",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Teams"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/TeamMember"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "team_member",
                      "id": 121,
                      "name": "Lorraine Baines",
                      "email": "lorraine@example.com",
                      "role": "owner"
                    },
                    {
                      "object": "team_member",
                      "id": 472,
                      "name": "Dennis Jones",
                      "email": "dennis@example.com",
                      "role": "member"
                    }
                  ],
                  "total": 2,
                  "count": 2,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          }
        }
      }
    },
    "/teams/{teamId}/members/{teamMemberId}": {
      "get": {
        "summary": "Retrieve a team member",
        "description": "Returns the member of a team.",
        "operationId": "get-teams-teamId-members-teamMemberId",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Teams"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "teamMemberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMember"
                },
                "example": {
                  "object": "team_member",
                  "id": 121,
                  "name": "Lorraine Baines",
                  "email": "lorraine@example.com",
                  "role": "owner"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/documents": {
      "get": {
        "summary": "List all documents",
        "description": "List all library documents.",
        "operationId": "get-documents",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Documents"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "attachment"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/Document-3"
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "single": {
                    "summary": "Single document",
                    "description": "A single document with attachment expanded.",
                    "value": {
                      "object": "paginated_list",
                      "data": [
                        {
                          "object": "document",
                          "id": 3342,
                          "name": "Non-disclosure agreement",
                          "description": "Generic non-disclosure agreement",
                          "is_enabled": true,
                          "attachment": {
                            "object": "attachment",
                            "id": 43375,
                            "name": "367452af-3931-4207-851a-adda324cd3d6.pdf",
                            "original": "NDA-final.pdf",
                            "type": "application/pdf",
                            "size": 272534,
                            "av_status": "clean",
                            "created_at": "2022-08-17T13:56:05Z",
                            "updated_at": "2022-08-17T13:56:05Z"
                          },
                          "created_at": "2022-08-17T13:56:05Z",
                          "updated_at": "2022-08-17T13:56:05Z"
                        }
                      ],
                      "total": 1,
                      "count": 1,
                      "limit": 100,
                      "current_page": 1,
                      "total_pages": 1,
                      "links": null
                    }
                  },
                  "multiple": {
                    "summary": "Multiple documents",
                    "description": "Multiple documents without attachments expanded.",
                    "value": {
                      "object": "paginated_list",
                      "data": [
                        {
                          "object": "document",
                          "id": 3342,
                          "name": "Non-disclosure agreement",
                          "description": "Generic non-disclosure agreement",
                          "is_enabled": true,
                          "attachment": 43375,
                          "created_at": "2022-08-17T13:56:05Z",
                          "updated_at": "2022-08-17T13:56:05Z"
                        },
                        {
                          "object": "document",
                          "id": 3561,
                          "name": "Rental application",
                          "description": "Rental and housing application form",
                          "is_enabled": false,
                          "attachment": 45418,
                          "created_at": "2022-09-02T11:53:34Z",
                          "updated_at": "2022-09-02T11:53:34Z"
                        }
                      ],
                      "total": 2,
                      "count": 2,
                      "limit": 100,
                      "current_page": 1,
                      "total_pages": 1,
                      "links": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/templates/emails": {
      "get": {
        "summary": "List all email templates",
        "description": "List all email templates.",
        "operationId": "get-templates-emails",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/EmailTemplate"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "email_template",
                      "id": 1383,
                      "name": "NDA",
                      "description": "Non-disclosure agreement",
                      "content": "Itaque eum sint. Repudiandae odio quia doloremque fugit nisi sed. Qui omnis minima cumque minima amet minima illo.",
                      "is_enabled": true,
                      "created_at": "2022-08-24T11:26:22Z",
                      "updated_at": "2022-08-24T11:26:22Z"
                    },
                    {
                      "object": "email_template",
                      "id": 2119,
                      "name": "Onboarding",
                      "description": "A new client's onboarding request",
                      "content": "Voluptatibus repellat aspernatur dolores non voluptatem sapiente esse id.\nTenetur illo enim harum repellat ex omnis nihil iure qui.\nQui aspernatur velit aut qui qui quis. Accusantium culpa est accusantium. Qui et in sit praesentium et. Ex labore nihil sunt fugit exercitationem quis quia suscipit.",
                      "is_enabled": false,
                      "created_at": "2022-09-02T08:14:51Z",
                      "updated_at": "2022-09-02T08:14:51Z"
                    }
                  ],
                  "total": 2,
                  "count": 2,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          }
        }
      }
    },
    "/templates/documents": {
      "get": {
        "summary": "List all document templates",
        "description": "List all document templates.",
        "operationId": "get-templates-documents",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/DocumentTemplate"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "document_template",
                      "id": 88456,
                      "name": "Utility bill",
                      "description": "Bill dated within three months",
                      "content": "Please upload a utility bill showing your name and current address dated within the last three months.",
                      "is_enabled": true,
                      "created_at": "2022-08-27T13:03:54Z",
                      "updated_at": "2022-08-27T13:03:54Z"
                    }
                  ],
                  "total": 1,
                  "count": 1,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          }
        }
      }
    },
    "/templates/records": {
      "get": {
        "summary": "List all record templates",
        "description": "List all record templates.",
        "operationId": "get-templates-records",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/RecordTemplate"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "record_template",
                      "id": 43723,
                      "name": "Identity verification",
                      "description": "Identity verification for new clients",
                      "presets": {
                        "steps": [
                          {
                            "object": "step",
                            "type": "check.photo_id",
                            "preferences": {
                              "report_type": "standard",
                              "face": true,
                              "liveness": true,
                              "facial_similarity": true,
                              "live_document": true,
                              "docs": [
                                "passport",
                                "driving_licence",
                                "national_id"
                              ]
                            }
                          },
                          {
                            "object": "step",
                            "type": "document.request",
                            "preferences": {
                              "title": "Utility bill",
                              "instructions": "A utility bill dated within the last three months."
                            }
                          }
                        ],
                        "notification": "email",
                        "message": "Modi praesentium incidunt optio corrupti. Error sunt et atque ut qui facere ipsa sed. Illo ut voluptas numquam sapiente.\nInventore est nisi animi et consequatur iure deserunt quam reiciendis. Dolor eligendi tempora id aut quos temporibus asperiores omnis necessitatibus. Vel vel nihil autem alias dignissimos.\nQuia dolores et sequi est rem. Neque at debitis facere ullam ut eligendi distinctio cumque itaque. Eum dignissimos ea. Reiciendis corporis hic sunt cupiditate dolor est. Saepe et qui unde earum et eum est. Qui architecto maxime ab aut dolor voluptatum qui sed consequatur.",
                        "reminder": true
                      },
                      "is_enabled": true,
                      "created_at": "2022-08-13T14:12:53Z",
                      "updated_at": "2022-08-13T14:12:53Z"
                    },
                    {
                      "object": "record_template",
                      "id": 43812,
                      "name": "Onboarding",
                      "description": "Onboarding for new staff members",
                      "presets": {
                        "steps": [
                          {
                            "object": "step",
                            "type": "check.criminal_record",
                            "preferences": {
                              "region": "scotland",
                              "enable_payment": false
                            }
                          },
                          {
                            "object": "step",
                            "type": "check.photo_id",
                            "preferences": {
                              "report_type": "standard",
                              "face": true,
                              "liveness": true,
                              "facial_similarity": true,
                              "live_document": true,
                              "docs": [
                                "passport",
                                "driving_licence"
                              ]
                            }
                          }
                        ],
                        "notification": "email",
                        "message": "Welcome to the team, please complete the onboarding steps.",
                        "reminder": false,
                        "assignees": [
                          623,
                          626
                        ]
                      },
                      "is_enabled": true,
                      "created_at": "2022-08-24T11:26:22Z",
                      "updated_at": "2022-08-24T11:26:22Z"
                    }
                  ],
                  "total": 2,
                  "count": 2,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "summary": "List all webhooks",
        "description": "List all webhooks.",
        "operationId": "get-webhooks",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/Webhook"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "webhook",
                      "id": 2154,
                      "uuid": "e4085749-1c11-4ac8-9361-df7f33c37ecb",
                      "url": "https://example.org/incoming/webhooks/amiqus",
                      "secret": "58585568aa4dc44c733bc244495fc1f2de3c2d2f56287c265274ab806f74bb34",
                      "events": [
                        "client.*",
                        "record.*"
                      ],
                      "is_enabled": true,
                      "created_at": "2022-08-24T11:26:22Z",
                      "updated_at": "2022-08-24T11:26:22Z"
                    },
                    {
                      "object": "webhook",
                      "id": 2159,
                      "url": "https://beta.example.org/webhooks/incoming",
                      "uuid": "0c416908-3a4a-4ee5-96fb-a780783e8b64",
                      "events": [
                        "*"
                      ],
                      "is_enabled": true,
                      "secret": "44c733bc56287c265274ab806f74bb34244495fc1f2de3c2d2f58585568aa4dc",
                      "created_at": "2022-08-24T12:05:53Z",
                      "updated_at": "2022-08-24T12:05:53Z"
                    }
                  ],
                  "total": 2,
                  "count": 2,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a webhook",
        "description": "Create a webhook.",
        "operationId": "post-webhooks",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Webhook"
                  },
                  {
                    "type": "object",
                    "required": [
                      "url",
                      "events"
                    ],
                    "properties": {
                      "is_enabled": {
                        "default": true
                      }
                    }
                  }
                ]
              },
              "example": {
                "url": "https://example.org/incoming/webhooks/amiqus",
                "events": [
                  "client.*",
                  "record.*"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                },
                "example": {
                  "object": "webhook",
                  "id": 2154,
                  "uuid": "e4085749-1c11-4ac8-9361-df7f33c37ecb",
                  "url": "https://example.org/incoming/webhooks/amiqus",
                  "secret": "58585568aa4dc44c733bc244495fc1f2de3c2d2f56287c265274ab806f74bb34",
                  "events": [
                    "client.*",
                    "record.*"
                  ],
                  "is_enabled": true,
                  "created_at": "2022-08-24T11:26:22Z",
                  "updated_at": "2022-08-24T11:26:22Z"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId"
        }
      ],
      "get": {
        "summary": "Retrieve a webhook",
        "description": "Retrieve a webhook.",
        "operationId": "get-webhooks-id",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                },
                "example": {
                  "object": "webhook",
                  "id": 2154,
                  "uuid": "e4085749-1c11-4ac8-9361-df7f33c37ecb",
                  "url": "https://example.org/incoming/webhooks/amiqus",
                  "secret": "58585568aa4dc44c733bc244495fc1f2de3c2d2f56287c265274ab806f74bb34",
                  "events": [
                    "client.*",
                    "record.*"
                  ],
                  "is_enabled": true,
                  "created_at": "2022-08-24T11:26:22Z",
                  "updated_at": "2022-08-24T11:26:22Z"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a webhook",
        "description": "Update a webhook.",
        "operationId": "patch-webhooks-id",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Webhook"
                  }
                ]
              },
              "examples": {
                "all": {
                  "summary": "URL and events",
                  "description": "Update both the URL and subscribed events.",
                  "value": {
                    "url": "https://example.org/incoming/webhooks/amiqus",
                    "events": [
                      "client.*"
                    ]
                  }
                },
                "multiple": {
                  "summary": "URL only",
                  "description": "Update only the URL.",
                  "value": {
                    "url": "https://beta.example.org/webhooks/incoming"
                  }
                },
                "disable": {
                  "summary": "Disable webhook",
                  "description": "Prevent the webhook being triggered.",
                  "value": {
                    "is_enabled": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                },
                "example": {
                  "object": "webhook",
                  "id": 2154,
                  "uuid": "e4085749-1c11-4ac8-9361-df7f33c37ecb",
                  "url": "https://example.org/incoming/webhooks/amiqus",
                  "secret": "58585568aa4dc44c733bc244495fc1f2de3c2d2f56287c265274ab806f74bb34",
                  "events": [
                    "client.*",
                    "record.*"
                  ],
                  "is_enabled": true,
                  "created_at": "2022-08-24T11:26:22Z",
                  "updated_at": "2022-08-24T11:26:22Z"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a webhook",
        "description": "Delete a webhook.",
        "operationId": "delete-webhooks-id",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/webhooks/{id}/deliveries": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId"
        }
      ],
      "get": {
        "summary": "List all deliveries for a webhook",
        "description": "List all deliveries for a webhook.",
        "operationId": "get-webhooks-id-deliveries",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/WebhookDelivery"
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "ping": {
                    "summary": "Ping",
                    "description": "Example of a successful delivery for a `ping` event.",
                    "value": {
                      "object": "paginated_list",
                      "data": [
                        {
                          "object": "webhook_delivery",
                          "id": 4532,
                          "uuid": "095be615-a8ad-4c33-8e9c-c7612fbf6c9f",
                          "event": "ping",
                          "attempts": 1,
                          "request": {
                            "url": "https://example.org/incoming/webhooks/amiqus",
                            "method": "POST",
                            "headers": {
                              "Content-Length": "1234",
                              "Host": "example.org",
                              "User-Agent": "Amiqus AmiqusID/8927532",
                              "Content-Type": "application/json",
                              "X-AQID-Signature": "I4BqQLTTfg1i24UFa9o9wS+qf+lo9BVeuBlO6tS5Y20=",
                              "X-AQID-Delivery-Id": "d7583a16-ad9e-4ec8-a53f-ffc67fd2445c"
                            },
                            "body": {
                              "uuid": "095be615-a8ad-4c33-8e9c-c7612fbf6c9f",
                              "event": "ping",
                              "sent_at": "2019-08-24T14:15:22Z",
                              "data": [
                                "ping"
                              ]
                            }
                          },
                          "response": {
                            "status_code": "204",
                            "headers": {
                              "Cache-Control": "no-cache, private",
                              "Date": "Mon, 22 Aug 2022 16:20:33 GMT"
                            },
                            "body": {}
                          },
                          "last_sent_at": "2019-08-24T14:15:22Z"
                        }
                      ],
                      "total": 1,
                      "count": 1,
                      "limit": 100,
                      "current_page": 1,
                      "total_pages": 1,
                      "links": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/forms": {
      "get": {
        "summary": "List all forms",
        "description": "List all forms.",
        "operationId": "get-forms",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Forms"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/FormTemplate"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "form_template",
                      "id": 45533,
                      "reference": "9b81f60f-2165-4e2c-b748-6c3071053e66",
                      "name": "New starter form",
                      "description": null,
                      "instructions": null,
                      "fields": [
                        {
                          "id": "1",
                          "type": "section",
                          "label": "",
                          "fields": [
                            "2"
                          ]
                        },
                        {
                          "id": "2",
                          "type": "section",
                          "label": "Onboarding",
                          "fields": [
                            "3",
                            "4"
                          ]
                        },
                        {
                          "id": "3",
                          "type": "text",
                          "label": "Job title",
                          "validation": [
                            "required"
                          ]
                        },
                        {
                          "id": "4",
                          "type": "radio",
                          "label": {
                            "value": "Contract type",
                            "options": [
                              "Full-time",
                              "Part-time"
                            ]
                          },
                          "validation": [
                            "required"
                          ]
                        }
                      ],
                      "version": 4,
                      "is_enabled": true,
                      "created_at": "2022-08-24T11:26:22Z",
                      "updated_at": "2022-08-24T11:26:22Z",
                      "archived_at": null
                    }
                  ],
                  "total": 1,
                  "count": 1,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a form",
        "description": "Create a form.",
        "operationId": "post-forms",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Forms"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FormTemplate"
                  },
                  {
                    "type": "object",
                    "required": [
                      "name",
                      "fields"
                    ],
                    "properties": {
                      "is_enabled": {
                        "default": true
                      }
                    }
                  }
                ]
              },
              "examples": {
                "simple": {
                  "summary": "Simple",
                  "description": "A simple form with two required fields inside a section.",
                  "value": {
                    "name": "New starter form",
                    "fields": [
                      {
                        "id": "1",
                        "type": "section",
                        "label": "",
                        "fields": [
                          "2"
                        ]
                      },
                      {
                        "id": "2",
                        "type": "section",
                        "label": "Onboarding",
                        "fields": [
                          "3",
                          "4"
                        ]
                      },
                      {
                        "id": "3",
                        "type": "text",
                        "label": "Job title",
                        "validation": [
                          "required"
                        ]
                      },
                      {
                        "id": "4",
                        "type": "radio",
                        "label": {
                          "value": "Contract type",
                          "options": [
                            "Full-time",
                            "Part-time"
                          ]
                        },
                        "validation": [
                          "required"
                        ]
                      }
                    ]
                  }
                },
                "advanced": {
                  "summary": "Advanced",
                  "description": "An advanced form with multiple sections, fields and mixed validation requirements.",
                  "value": {
                    "name": "Property requirements",
                    "description": null,
                    "fields": [
                      {
                        "id": "2",
                        "type": "section",
                        "label": "",
                        "fields": [
                          "3",
                          "7",
                          "12"
                        ]
                      },
                      {
                        "id": "3",
                        "type": "section",
                        "label": "Current property",
                        "fields": [
                          "4",
                          "8"
                        ]
                      },
                      {
                        "id": "4",
                        "type": "radio",
                        "validation": [
                          "required"
                        ],
                        "label": {
                          "value": "Ownership",
                          "options": [
                            "Rented",
                            "Home-owner (outright)",
                            "Home-owner (mortgaged)",
                            "Other"
                          ]
                        }
                      },
                      {
                        "id": "7",
                        "type": "section",
                        "label": "Requirements",
                        "fields": [
                          "11",
                          "10"
                        ]
                      },
                      {
                        "id": "8",
                        "type": "text",
                        "label": "Duration",
                        "description": "The number of months you've been a resident at your current property.",
                        "validation": [
                          "required"
                        ]
                      },
                      {
                        "id": "10",
                        "type": "text",
                        "label": "Bedrooms",
                        "description": "Enter the minimum number of bedrooms required.",
                        "validation": [
                          "required"
                        ]
                      },
                      {
                        "id": "11",
                        "type": "checkbox",
                        "label": {
                          "value": "Requirements",
                          "options": [
                            "Garden",
                            "Driveway",
                            "New Home"
                          ]
                        },
                        "description": "Tick any specific requirements."
                      },
                      {
                        "id": "12",
                        "type": "textarea",
                        "label": "Notes",
                        "description": "Provide any additional details that might be useful."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormTemplate"
                },
                "example": {
                  "object": "form_template",
                  "id": 45533,
                  "reference": "9b81f60f-2165-4e2c-b748-6c3071053e66",
                  "name": "New starter form",
                  "description": null,
                  "instructions": null,
                  "fields": [
                    {
                      "id": "1",
                      "type": "section",
                      "label": "",
                      "fields": [
                        "2"
                      ]
                    },
                    {
                      "id": "2",
                      "type": "section",
                      "label": "Onboarding",
                      "fields": [
                        "3",
                        "4"
                      ]
                    },
                    {
                      "id": "3",
                      "type": "text",
                      "label": "Job title",
                      "validation": [
                        "required"
                      ]
                    },
                    {
                      "id": "4",
                      "type": "radio",
                      "label": {
                        "value": "Contract type",
                        "options": [
                          "Full-time",
                          "Part-time"
                        ]
                      },
                      "validation": [
                        "required"
                      ]
                    }
                  ],
                  "version": 4,
                  "is_enabled": true,
                  "created_at": "2022-08-24T11:26:22Z",
                  "updated_at": "2022-08-24T11:26:22Z",
                  "archived_at": null
                }
              }
            }
          }
        }
      }
    },
    "/forms/{reference}": {
      "parameters": [
        {
          "name": "reference",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a form",
        "description": "Retrieve a form.",
        "operationId": "get-forms-id",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Forms"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormTemplate"
                },
                "example": {
                  "object": "form_template",
                  "id": 45533,
                  "reference": "9b81f60f-2165-4e2c-b748-6c3071053e66",
                  "name": "New starter form",
                  "description": null,
                  "instructions": null,
                  "fields": [
                    {
                      "id": "1",
                      "type": "section",
                      "label": "",
                      "fields": [
                        "2"
                      ]
                    },
                    {
                      "id": "2",
                      "type": "section",
                      "label": "Onboarding",
                      "fields": [
                        "3",
                        "4"
                      ]
                    },
                    {
                      "id": "3",
                      "type": "text",
                      "label": "Job title",
                      "validation": [
                        "required"
                      ]
                    },
                    {
                      "id": "4",
                      "type": "radio",
                      "label": {
                        "value": "Contract type",
                        "options": [
                          "Full-time",
                          "Part-time"
                        ]
                      },
                      "validation": [
                        "required"
                      ]
                    }
                  ],
                  "version": 4,
                  "is_enabled": true,
                  "created_at": "2022-08-24T11:26:22Z",
                  "updated_at": "2022-08-24T11:26:22Z",
                  "archived_at": null
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a form",
        "description": "Update a form.",
        "operationId": "patch-forms-id",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Forms"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "minProperties": 1,
                "$ref": "#/components/schemas/FormTemplate"
              },
              "examples": {
                "fields": {
                  "summary": "Add fields",
                  "description": "Update the \"New starter form\" adding a new multple choice answer.",
                  "value": {
                    "fields": [
                      {
                        "id": "1",
                        "type": "section",
                        "label": "",
                        "fields": [
                          "2"
                        ]
                      },
                      {
                        "id": "2",
                        "type": "section",
                        "label": "Onboarding",
                        "fields": [
                          "3",
                          "4"
                        ]
                      },
                      {
                        "id": "3",
                        "type": "text",
                        "label": "Job title",
                        "validation": [
                          "required"
                        ]
                      },
                      {
                        "id": "4",
                        "type": "radio",
                        "label": {
                          "value": "Contract type",
                          "options": [
                            "Full-time",
                            "Part-time",
                            "Contractor"
                          ]
                        },
                        "validation": [
                          "required"
                        ]
                      }
                    ]
                  }
                },
                "disable": {
                  "summary": "Disable form",
                  "description": "Disable the \"New starter form\".",
                  "value": {
                    "is_enabled": false
                  }
                },
                "details": {
                  "summary": "Form details",
                  "description": "Update name and description details.",
                  "value": {
                    "name": "New starter form (internship)",
                    "description": "New starter onboarding sent to all internship applicants."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormTemplate"
                },
                "example": {
                  "object": "form_template",
                  "id": 45533,
                  "reference": "9b81f60f-2165-4e2c-b748-6c3071053e66",
                  "name": "New starter form",
                  "description": null,
                  "instructions": null,
                  "fields": [
                    {
                      "id": "1",
                      "type": "section",
                      "label": "",
                      "fields": [
                        "2"
                      ]
                    },
                    {
                      "id": "2",
                      "type": "section",
                      "label": "Onboarding",
                      "fields": [
                        "3",
                        "4"
                      ]
                    },
                    {
                      "id": "3",
                      "type": "text",
                      "label": "Job title",
                      "validation": [
                        "required"
                      ]
                    },
                    {
                      "id": "4",
                      "type": "radio",
                      "label": {
                        "value": "Contract type",
                        "options": [
                          "Full-time",
                          "Part-time",
                          "Contractor"
                        ]
                      },
                      "validation": [
                        "required"
                      ]
                    }
                  ],
                  "version": 5,
                  "is_enabled": true,
                  "created_at": "2022-08-24T11:26:22Z",
                  "updated_at": "2022-09-12T09:06:45Z",
                  "archived_at": null
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a form",
        "description": "Delete a form.",
        "operationId": "delete-forms-id",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Forms"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/steps": {
      "get": {
        "summary": "List all steps",
        "description": "List all steps available for use.",
        "operationId": "get-steps",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Steps"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedList"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/AvailableSteps"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "object": "paginated_list",
                  "data": [
                    {
                      "object": "available_step",
                      "type": "check.identity",
                      "costs": [
                        1
                      ]
                    },
                    {
                      "object": "available_step",
                      "type": "check.photo_id",
                      "costs": [
                        1,
                        2,
                        3,
                        4
                      ]
                    },
                    {
                      "object": "available_step",
                      "type": "check.watchlist",
                      "costs": [
                        2,
                        3,
                        4
                      ]
                    },
                    {
                      "object": "available_step",
                      "type": "document.request",
                      "costs": [
                        0
                      ]
                    },
                    {
                      "object": "available_step",
                      "type": "document.transfer",
                      "costs": [
                        0
                      ]
                    }
                  ],
                  "total": 5,
                  "count": 5,
                  "limit": 100,
                  "current_page": 1,
                  "total_pages": 1,
                  "links": null
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Validate steps",
        "description": "Validate steps and return costs.",
        "operationId": "post-steps",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Steps"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "steps"
                ],
                "properties": {
                  "steps": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RecordStepsWrite"
                    },
                    "minItems": 1
                  }
                }
              },
              "examples": {
                "simple": {
                  "summary": "Simple",
                  "description": "Steps containing an identity check and a standard Photo ID check with passport and driving licence document types enabled.",
                  "value": {
                    "steps": [
                      {
                        "type": "check.identity"
                      },
                      {
                        "type": "check.photo_id",
                        "preferences": {
                          "report_type": "standard",
                          "docs": [
                            "passport",
                            "driving_licence"
                          ]
                        }
                      }
                    ]
                  }
                },
                "advanced": {
                  "summary": "Advanced",
                  "description": "Steps containing checks, documents and forms.",
                  "value": {
                    "steps": [
                      {
                        "type": "check.photo_id",
                        "preferences": {
                          "report_type": "standard",
                          "facial_similarity": true,
                          "live_document": true,
                          "docs": [
                            "passport"
                          ]
                        }
                      },
                      {
                        "type": "document.request",
                        "preferences": {
                          "template": 88456
                        }
                      },
                      {
                        "type": "document.transfer",
                        "preferences": {
                          "template": 3316,
                          "returned": true,
                          "instructions": "Rental agreement",
                          "return_message": "Please sign and return the rental agreement."
                        }
                      },
                      {
                        "type": "document.transfer",
                        "preferences": {
                          "name": "Non-disclosure agreement",
                          "attachment": 7432
                        }
                      },
                      {
                        "type": "form",
                        "preferences": {
                          "form": "61085d27-676e-47ae-a3b6-ae4e5d857fc1"
                        }
                      },
                      {
                        "type": "form",
                        "preferences": {
                          "form": "e2019279-8c53-47ee-a910-e5048300b334"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidatedSteps"
                },
                "examples": {
                  "simple": {
                    "summary": "Simple",
                    "description": "Validated steps containing an identity check and a standard Photo ID check with passport and driving licence document types enabled.",
                    "value": {
                      "object": "validated_steps",
                      "steps": [
                        {
                          "object": "validated_step",
                          "type": "check.identity",
                          "cost": 2
                        },
                        {
                          "object": "validated_step",
                          "type": "check.photo_id",
                          "cost": 2
                        }
                      ]
                    }
                  },
                  "advanced": {
                    "summary": "Advanced",
                    "description": "Validated steps containing a check, document request, document transfers and forms.",
                    "value": {
                      "object": "validated_steps",
                      "steps": [
                        {
                          "object": "validated_step",
                          "type": "check.photo_id",
                          "cost": 2
                        },
                        {
                          "object": "validated_step",
                          "type": "document.request",
                          "cost": 0
                        },
                        {
                          "object": "validated_step",
                          "type": "document.transfer",
                          "cost": 0
                        },
                        {
                          "object": "validated_step",
                          "type": "document.transfer",
                          "cost": 0
                        },
                        {
                          "object": "validated_step",
                          "type": "form",
                          "cost": 0
                        },
                        {
                          "object": "validated_step",
                          "type": "form",
                          "cost": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/attachments": {
      "post": {
        "summary": "Create an attachment",
        "description": "Create an attachment.",
        "operationId": "post-attachments",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Other Resources"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "attachment"
                ],
                "properties": {
                  "attachment": {
                    "type": "string",
                    "format": "binary",
                    "description": "Supported file types: pdf, docx, doc, xlsx, xls, csv, jpg, png, tiff, zip.\n\nFile size limit: 100MB.\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                },
                "example": {
                  "object": "attachment",
                  "id": 31782,
                  "name": "14592310-706e-4bae-9171-83db2fa9d0fb.pdf",
                  "original": "NDA.pdf",
                  "type": "application/pdf",
                  "size": 16053,
                  "av_status": "clean",
                  "created_at": "2023-01-13T11:54:24Z",
                  "updated_at": "2023-01-13T11:54:24Z"
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        }
      }
    },
    "/sdk_token": {
      "post": {
        "summary": "Create an SDK token",
        "description": "Create an SDK token.",
        "operationId": "post-sdk_token",
        "security": [
          {
            "personal_token": []
          },
          {
            "oauth": []
          }
        ],
        "tags": [
          "Other Resources"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "record_id"
                ],
                "$ref": "#/components/schemas/SdkToken"
              },
              "example": {
                "record_id": 44568
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SdkToken"
                },
                "example": {
                  "object": "sdk_token",
                  "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjQ5OTEzNzYwMCwiZXhwIjo0OTkxMzc2NjAsIm1hcnR5IjoiU291bmRzIHByZXR0eSBoZWF2eS4iLCJkb2MiOiJXZWlnaHQgaGFzIG5vdGhpbmcgdG8gZG8gd2l0aCBpdC4iLCLwn5GLIjoiVGhpcyBpcyBub3QgYSB2YWxpZCBTREsgVG9rZW4uIn0.j2jAeX_MpagkS7qvBjF9uYYIawP_uvEPqnftEW9wDe8"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Description of the error"
          }
        }
      },
      "User": {
        "title": "User",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "user"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "Unique user identifier"
          },
          "name": {
            "type": "string",
            "description": "Full or partial name\n\nThe value is not formatted (e.g. title case), and appears as written.\n"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Unique user email address"
          },
          "is_verified": {
            "type": "boolean",
            "readOnly": true,
            "description": "`true` once a new user has verified their email address\n"
          },
          "is_disabled": {
            "type": "boolean",
            "readOnly": true,
            "description": "`true` when a user account has been disabled\n\nUser accounts disabled due to failed login attempts are automatically re-enabled after a delay. Please contact support@amiqus.co for further details.\n"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "Date and time the user account was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "Date and time the user's details were last updated"
          }
        }
      },
      "PaginatedList": {
        "title": "Paginated List",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "enum": [
              "paginated_list"
            ]
          },
          "data": {
            "type": "array"
          },
          "total": {
            "type": "integer",
            "minimum": 0
          },
          "count": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "maximum": 100,
            "minimum": 1
          },
          "current_page": {
            "type": "integer",
            "minimum": 1
          },
          "total_pages": {
            "type": "integer",
            "minimum": 1
          },
          "links": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "title": "Pagination links",
                "type": "object",
                "required": [
                  "next",
                  "previous"
                ],
                "properties": {
                  "next": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "url"
                  },
                  "previous": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "url"
                  }
                }
              }
            ]
          }
        }
      },
      "Team": {
        "title": "Team",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "team"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "identifier": {
            "type": "string",
            "readOnly": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "contact": {
            "type": "string",
            "format": "email"
          },
          "telephone": {
            "type": [
              "null",
              "string"
            ]
          },
          "tier": {
            "type": "string",
            "readOnly": true
          },
          "logo": {
            "type": [
              "string",
              "null"
            ],
            "readOnly": true
          },
          "is_support_enabled": {
            "type": "boolean",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "archived_at": {
            "type": [
              "null",
              "string"
            ],
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "TeamMember": {
        "title": "Team Member",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "team_member"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "type": "string",
            "enum": [
              "assumed",
              "owner",
              "member",
              "read-only",
              "assigned-only"
            ]
          }
        }
      },
      "Name": {
        "title": "Name",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "name"
            ]
          },
          "title": {
            "type": [
              "null",
              "string"
            ],
            "enum": [
              "miss",
              "ms",
              "mrs",
              "mr",
              "dr",
              "sir",
              "master",
              "mx",
              "dame",
              "lord",
              "lady",
              "prof",
              "other"
            ]
          },
          "other_title": {
            "type": [
              "null",
              "string"
            ],
            "description": "Required if `title: \"other\"`\n"
          },
          "first_name": {
            "type": "string"
          },
          "middle_name": {
            "type": [
              "null",
              "string"
            ]
          },
          "last_name": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "First and Last name.",
            "readOnly": true
          },
          "full_name": {
            "type": "string",
            "description": "First, Middle and Last names.",
            "readOnly": true
          },
          "complete_name": {
            "type": "string",
            "description": "Title and Full name.",
            "readOnly": true
          }
        }
      },
      "Client": {
        "title": "Client",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "client"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "status": {
            "type": [
              "null",
              "string"
            ]
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "landline": {
            "type": [
              "null",
              "string"
            ]
          },
          "mobile": {
            "type": [
              "null",
              "string"
            ]
          },
          "dob": {
            "type": [
              "null",
              "string"
            ],
            "format": "date"
          },
          "reference": {
            "type": [
              "null",
              "string"
            ]
          },
          "is_deletable": {
            "type": "boolean",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "archived_at": {
            "type": [
              "null",
              "string"
            ],
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "Address": {
        "title": "Address",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "address"
            ]
          },
          "unit": {
            "type": [
              "null",
              "string"
            ]
          },
          "house_name": {
            "type": [
              "null",
              "string"
            ]
          },
          "house_number": {
            "type": [
              "null",
              "string"
            ]
          },
          "street_name": {
            "type": [
              "null",
              "string"
            ]
          },
          "second_street": {
            "type": [
              "null",
              "string"
            ]
          },
          "district": {
            "type": [
              "null",
              "string"
            ]
          },
          "city": {
            "type": [
              "null",
              "string"
            ]
          },
          "province": {
            "type": [
              "null",
              "string"
            ]
          },
          "postcode": {
            "type": [
              "null",
              "string"
            ]
          },
          "country": {
            "type": [
              "null",
              "string"
            ],
            "enum": [
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "CI",
              "DK",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FI",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "XK",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "AN",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "NO",
              "OM",
              "PK",
              "PS",
              "PW",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "CM",
              "RE",
              "RO",
              "RU",
              "RW",
              "BL",
              "SH",
              "KN",
              "LC",
              "MF",
              "PM",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "KR",
              "SS",
              "ES",
              "LK",
              "VC",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "GB",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "YU",
              "ZM",
              "ZW"
            ]
          }
        }
      },
      "Assignee": {
        "title": "Assignee",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "assignee"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "The assignee ID"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "User-2": {
        "title": "User Assignee",
        "allOf": [
          {
            "$ref": "#/components/schemas/Assignee"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "user"
                ]
              }
            }
          }
        ]
      },
      "schema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedList"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/User-2"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "Organisation": {
        "title": "Organisation",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "organisation"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "Unique organisation identifier"
          },
          "name": {
            "type": "string",
            "maximum": 255,
            "description": "Organisation or company name\nThe value is not formatted (e.g. title case), and appears as written.\n"
          },
          "company_number": {
            "type": [
              "null",
              "string"
            ],
            "maximum": 255,
            "description": "The company registration number or reference"
          },
          "jurisdiction": {
            "type": [
              "null",
              "string"
            ],
            "enum": [
              "ae_az",
              "us_al",
              "us_ak",
              "al",
              "us_az",
              "us_ar",
              "aw",
              "au",
              "bs",
              "bh",
              "bd",
              "bb",
              "by",
              "be",
              "bz",
              "bm",
              "bo",
              "br",
              "bg",
              "us_ca",
              "kh",
              "ca",
              "us_co",
              "us_ct",
              "hr",
              "cw",
              "cy",
              "us_de",
              "dk",
              "us_dc",
              "do",
              "ae_du",
              "fi",
              "us_fl",
              "fr",
              "gf",
              "us_ga",
              "de",
              "gi",
              "gr",
              "gl",
              "gp",
              "gg",
              "us_hi",
              "hk",
              "is",
              "us_id",
              "in",
              "us_in",
              "us_ia",
              "ir",
              "ie",
              "im",
              "il",
              "jm",
              "jp",
              "je",
              "us_ks",
              "us_ky",
              "lv",
              "li",
              "us_la",
              "lu",
              "us_me",
              "my",
              "mt",
              "mq",
              "us_md",
              "us_ma",
              "mu",
              "yt",
              "mx",
              "us_mi",
              "us_mn",
              "us_ms",
              "us_mo",
              "md",
              "us_mt",
              "me",
              "mm",
              "us_ne",
              "nl",
              "us_nv",
              "ca_nb",
              "us_nh",
              "us_nj",
              "us_nm",
              "us_ny",
              "nz",
              "ca_nl",
              "us_nc",
              "us_nd",
              "no",
              "ca_ns",
              "us_oh",
              "us_ok",
              "us_or",
              "pk",
              "pa",
              "us_pa",
              "pl",
              "ca_pe",
              "pr",
              "ca_qc",
              "us_ri",
              "ro",
              "rw",
              "re",
              "bl",
              "mf",
              "pm",
              "sg",
              "sk",
              "si",
              "za",
              "us_sc",
              "us_sd",
              "es",
              "se",
              "ch",
              "tj",
              "tz",
              "us_tn",
              "us_tx",
              "th",
              "to",
              "tn",
              "ug",
              "ua",
              "gb",
              "us_ut",
              "vu",
              "us_vt",
              "vn",
              "us_va",
              "us_wa",
              "us_wv",
              "us_wi",
              "us_wy"
            ],
            "description": "The country code or region where the company is registered.\n\nRequired if `company_number` is provided.\n"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "Date and time the organisation was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "Date and time the organisation's details were last updated"
          }
        }
      },
      "RecordStatus": {
        "type": "string",
        "enum": [
          "pending",
          "started",
          "complete",
          "incomplete",
          "waiting",
          "failed",
          "empty",
          "paused",
          "amendments",
          "reviewed"
        ]
      },
      "Step": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "object": {
            "type": "string",
            "enum": [
              "step"
            ],
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "type": {
            "type": "string"
          }
        }
      },
      "Check": {
        "title": "Check",
        "type": "object"
      },
      "CallcreditCallReport": {
        "title": "TransUnion",
        "allOf": [
          {
            "$ref": "#/components/schemas/Check"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "check.credit"
                ]
              }
            }
          }
        ]
      },
      "CheckStatus": {
        "type": "string",
        "enum": [
          "pending",
          "submitted",
          "accepted",
          "rejected",
          "refer",
          "failed",
          "paused"
        ]
      },
      "Check-2": {
        "title": "Check",
        "type": "object",
        "description": "@incomplete",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "enum": [
              "check"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "type": {
            "type": "string"
          },
          "record": {
            "readOnly": true,
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/CheckStatus"
          },
          "allow_replay": {
            "type": "boolean"
          },
          "allow_cancel": {
            "type": "boolean"
          },
          "requires_consent": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RecordCheck": {
        "type": "object",
        "properties": {
          "check": {
            "readOnly": true,
            "x-expandable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Check-2"
              },
              {
                "type": "integer"
              }
            ]
          }
        }
      },
      "Metadata": {
        "type": "object",
        "properties": {
          "cost": {
            "type": "integer",
            "minimum": 0,
            "readOnly": true
          },
          "completed_at": {
            "type": [
              "null",
              "string"
            ],
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "EquifaxCredit": {
        "title": "Equifax",
        "allOf": [
          {
            "$ref": "#/components/schemas/Check"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "check.credit"
                ]
              }
            }
          }
        ]
      },
      "CriminalRecord": {
        "title": "Criminal record",
        "allOf": [
          {
            "$ref": "#/components/schemas/Check"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "check.criminal_record"
                ]
              }
            }
          }
        ]
      },
      "CriminalRecord-2": {
        "type": "object",
        "required": [
          "preferences"
        ],
        "properties": {
          "preferences": {
            "type": "object",
            "oneOf": [
              {
                "title": "Disclosure Scotland",
                "required": [
                  "region"
                ],
                "properties": {
                  "region": {
                    "type": "string",
                    "enum": [
                      "scotland"
                    ]
                  },
                  "enable_payment": {
                    "title": "Pass on fee",
                    "description": "Require the person to pay for the processing of this check.",
                    "type": "boolean"
                  }
                }
              },
              {
                "title": "DBS: Basic",
                "required": [
                  "region",
                  "type"
                ],
                "properties": {
                  "region": {
                    "type": "string",
                    "enum": [
                      "england"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "basic"
                    ]
                  },
                  "enable_payment": {
                    "title": "Pass on fee",
                    "description": "Require the person to pay for the processing of this check.",
                    "type": "boolean"
                  }
                }
              },
              {
                "title": "DBS: Standard",
                "required": [
                  "region",
                  "type"
                ],
                "properties": {
                  "region": {
                    "type": "string",
                    "enum": [
                      "england"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "standard"
                    ]
                  },
                  "free_volunteer": {
                    "title": "Reduced rate COVID-19 application",
                    "description": "This check will cost 1 credit for eligible roles when responding to COVID-19.",
                    "type": "boolean",
                    "readOnly": true,
                    "deprecated": true
                  },
                  "enable_payment": {
                    "title": "Pass on fee",
                    "description": "Require the person to pay for the processing of this check.",
                    "type": "boolean"
                  }
                }
              },
              {
                "title": "DBS: Enhanced",
                "required": [
                  "region",
                  "type"
                ],
                "properties": {
                  "region": {
                    "type": "string",
                    "enum": [
                      "england"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "enhanced"
                    ]
                  },
                  "free_volunteer": {
                    "title": "Reduced rate COVID-19 application",
                    "description": "This check will cost 1 credit for eligible roles when responding to COVID-19.",
                    "type": "boolean",
                    "readOnly": true,
                    "deprecated": true
                  },
                  "enable_payment": {
                    "title": "Pass on fee",
                    "description": "Require the person to pay for the processing of this check.",
                    "type": "boolean"
                  }
                }
              }
            ]
          }
        }
      },
      "Dummy": {
        "title": "Dummy",
        "allOf": [
          {
            "$ref": "#/components/schemas/Check"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "check.dummy"
                ]
              }
            }
          }
        ]
      },
      "Dummy-2": {
        "type": "object",
        "properties": {
          "preferences": {
            "type": "object",
            "properties": {
              "payment_amount": {
                "description": "The amount the person will pay for the processing of this check.\n\n`null` if person is not required to pay for the processing of this check.\n",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 10000,
                    "description": "Value is a cent integer, e.g. 1437 â†’ 14.37\n"
                  }
                ]
              },
              "credit_cost": {
                "description": "The number of credits deducted to run this check.\n\n`null` if the default credit cost should be used to run the check.\n",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 100
                  }
                ]
              },
              "cancel": {
                "type": "boolean",
                "description": "Let this check be cancelled while in a `paused` state."
              },
              "replay": {
                "type": "boolean",
                "description": "Enable \"re-submit\" action when check has failed."
              },
              "state": {
                "type": "string",
                "description": "Automatically set the check status without carrying out a request.",
                "default": "pending",
                "enum": [
                  "pending",
                  "accepted",
                  "rejected",
                  "refer",
                  "failed",
                  "paused"
                ]
              }
            }
          }
        }
      },
      "Thorntons": {
        "title": "Thorntons Onboarding",
        "allOf": [
          {
            "$ref": "#/components/schemas/Check"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "check.thorntons_onboarding"
                ]
              }
            }
          }
        ]
      },
      "HscniAccessNi": {
        "title": "HSCNI Access NI",
        "allOf": [
          {
            "$ref": "#/components/schemas/Check"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "check.hscni_access_ni"
                ]
              }
            }
          }
        ]
      },
      "HscniAccessNi-2": {
        "type": "object",
        "required": [
          "preferences"
        ],
        "properties": {
          "preferences": {
            "type": "object",
            "required": [
              "type",
              "pin_number"
            ],
            "oneOf": [
              {
                "title": "Standard",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "standard"
                    ]
                  },
                  "pin_number": {
                    "type": "string",
                    "format": "integer",
                    "minLength": 6,
                    "maxLength": 6
                  }
                }
              },
              {
                "title": "Enhanced",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "enhanced"
                    ]
                  },
                  "pin_number": {
                    "type": "string",
                    "format": "integer",
                    "minLength": 6,
                    "maxLength": 6
                  }
                }
              },
              {
                "title": "Enhanced with barring",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "enhanced_barring"
                    ]
                  },
                  "barring_adults": {
                    "title": "Adults",
                    "description": "Include adult barring lists.\n\nRequired if `barring_children: false`\n",
                    "type": "boolean",
                    "default": false
                  },
                  "barring_children": {
                    "title": "Children",
                    "description": "Include child barring lists.\n\nRequired if `barring_adults: false`\n",
                    "type": "boolean",
                    "default": false
                  },
                  "pin_number": {
                    "type": "string",
                    "format": "integer",
                    "minLength": 6,
                    "maxLength": 6
                  }
                }
              }
            ]
          }
        }
      },
      "CallcreditCallValidate": {
        "title": "TransUnion",
        "allOf": [
          {
            "$ref": "#/components/schemas/Check"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "check.identity"
                ]
              }
            }
          }
        ]
      },
      "EquifaxIdentity": {
        "title": "Equifax",
        "allOf": [
          {
            "$ref": "#/components/schemas/Check"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "check.identity"
                ]
              }
            }
          }
        ]
      },
      "NhsEsr": {
        "title": "NHS ESR",
        "allOf": [
          {
            "$ref": "#/components/schemas/Check"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "check.nhs_esr"
                ]
              }
            }
          }
        ]
      },
      "NhsEsr-2": {
        "type": "object",
        "required": [
          "preferences"
        ],
        "properties": {
          "preferences": {
            "type": "object",
            "minProperties": 1,
            "properties": {
              "GMC": {
                "type": "boolean",
                "description": "General Medical Council (GMC)"
              },
              "NMC": {
                "type": "boolean",
                "description": "Nursing and Midwifery Council (NMC)"
              },
              "HCP": {
                "type": "boolean",
                "description": "Health and Care Professions Council (HCPC)"
              },
              "GDC": {
                "type": "boolean",
                "description": "General Dental Council (GDC)"
              },
              "GPC": {
                "type": "boolean",
                "description": "General Pharmaceutical Council (GPhC or GPC)"
              }
            }
          }
        }
      },
      "Onfido": {
        "title": "Photo ID",
        "allOf": [
          {
            "$ref": "#/components/schemas/Check"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "check.photo_id"
                ]
              }
            }
          }
        ]
      },
      "Onfido-2": {
        "type": "object",
        "required": [
          "preferences"
        ],
        "properties": {
          "preferences": {
            "oneOf": [
              {
                "title": "Document verification",
                "type": "object",
                "required": [
                  "report_type",
                  "docs"
                ],
                "properties": {
                  "report_type": {
                    "type": "string",
                    "enum": [
                      "standard"
                    ]
                  },
                  "face": {
                    "type": "boolean",
                    "deprecated": true,
                    "readOnly": true,
                    "default": false,
                    "description": "Request a photograph of this person to compare against their ID document."
                  },
                  "liveness": {
                    "type": "boolean",
                    "deprecated": true,
                    "readOnly": true,
                    "default": false,
                    "description": "Ask this person to present a unique code when taking their photograph to help verify they are the one carrying out the check."
                  },
                  "facial_similarity": {
                    "type": "boolean",
                    "default": false,
                    "description": "Biometric analysis to verify document ownership, compared against a photo or motion video of the person performing the request.\n\n**Costs +1 Additional credit**\n"
                  },
                  "live_document": {
                    "type": "boolean",
                    "default": false,
                    "description": "Ask this person to take a photo of their document with a smartphone or tablet device.\n\n_This feature may not be enabled for all teams._\n"
                  },
                  "docs": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                      "type": "string",
                      "enum": [
                        "passport",
                        "driving_licence",
                        "national_id"
                      ]
                    }
                  },
                  "issuing_countries": {
                    "description": "Accept documents issued by only these countries.",
                    "oneOf": [
                      {
                        "type": "array",
                        "minItems": 1,
                        "uniqueItems": true,
                        "items": {
                          "type": "string",
                          "enum": [
                            "GBR",
                            "IRL"
                          ]
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                }
              },
              {
                "title": "Biometric",
                "type": "object",
                "required": [
                  "report_type"
                ],
                "properties": {
                  "report_type": {
                    "type": "string",
                    "enum": [
                      "biometric"
                    ]
                  },
                  "issuing_countries": {
                    "description": "Accept documents issued by only these countries.",
                    "oneOf": [
                      {
                        "type": "array",
                        "minItems": 1,
                        "uniqueItems": true,
                        "items": {
                          "type": "string",
                          "enum": [
                            "GBR",
                            "IRL"
                          ]
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      "Reference": {
        "title": "Employment history",
        "allOf": [
          {
            "$ref": "#/components/schemas/Check"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "check.reference"
                ]
              }
            }
          }
        ]
      },
      "Reference-2": {
        "type": "object",
        "required": [
          "preferences"
        ],
        "properties": {
          "preferences": {
            "type": "object",
            "required": [
              "years"
            ],
            "properties": {
              "years": {
                "type": "integer",
                "description": "Length of employment history.",
                "minimum": 1,
                "maximum": 10
              }
            }
          }
        }
      },
      "TrueLayer": {
        "title": "Banking information",
        "allOf": [
          {
            "$ref": "#/components/schemas/Check"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "check.banking_information"
                ]
              }
            }
          }
        ]
      },
      "TrueLayer-2": {
        "type": "object",
        "properties": {
          "preferences": {
            "type": "object",
            "properties": {
              "balance": {
                "type": "boolean",
                "default": false,
                "description": "Include balances for each connected account."
              },
              "transactions": {
                "default": false,
                "oneOf": [
                  {
                    "type": "integer",
                    "enum": [
                      1,
                      3,
                      6,
                      12
                    ],
                    "description": "Months of transactions to fetch for each connected account."
                  },
                  {
                    "type": "boolean",
                    "enum": [
                      false
                    ],
                    "description": "Do not retrieve transactions for each connected account."
                  }
                ]
              }
            }
          }
        }
      },
      "Video": {
        "title": "Face capture",
        "allOf": [
          {
            "$ref": "#/components/schemas/Check"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "check.video"
                ]
              }
            }
          }
        ]
      },
      "Watchlist": {
        "title": "Watchlist",
        "allOf": [
          {
            "$ref": "#/components/schemas/Check"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "check.watchlist"
                ]
              }
            }
          }
        ]
      },
      "Watchlist-2": {
        "type": "object",
        "properties": {
          "preferences": {
            "type": "object",
            "properties": {
              "silent": {
                "type": "boolean",
                "default": true,
                "description": "When `false` this person will be asked to agree before the check is run, otherwise they will not be notified.\n\n_Setting this preference may not be available for all teams._\n"
              },
              "monitor": {
                "description": "Continually monitor changes to the check results for one or three years.",
                "default": false,
                "oneOf": [
                  {
                    "type": "integer",
                    "enum": [
                      1,
                      3
                    ],
                    "description": "Continually monitor changes to the check results for one or three years.\n\n**Costs 1â€“2 additional credits**\n"
                  },
                  {
                    "type": "boolean",
                    "enum": [
                      false
                    ],
                    "description": "Disable ongoing monitoring."
                  }
                ]
              }
            }
          }
        }
      },
      "Request": {
        "title": "Document Request",
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "document.request"
            ]
          }
        }
      },
      "Request-2": {
        "type": "object",
        "required": [
          "title",
          "instructions"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "instructions": {
            "type": "string"
          }
        }
      },
      "Attachment": {
        "title": "Attachment",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "attachment"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "original": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "readOnly": true
          },
          "size": {
            "type": "integer",
            "readOnly": true
          },
          "av_status": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "pending",
              "clean",
              "infected",
              "error"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "RecordDocument": {
        "title": "RecordDocument",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "record_document"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "enum": [
              "requested",
              "sent",
              "returned"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "complete"
            ]
          },
          "config": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "object",
                "title": "Document Request",
                "required": [
                  "instructions"
                ],
                "properties": {
                  "instructions": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "title": "Document Transfer",
                "properties": {
                  "require_return": {
                    "type": "boolean",
                    "default": false
                  },
                  "require_confirmation": {
                    "type": "boolean",
                    "default": false
                  },
                  "instructions": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "return_message": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Required if `require_return: true`\n"
                  }
                }
              }
            ]
          },
          "source": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "record",
                  "record_document"
                ]
              },
              "id": {
                "type": "integer"
              }
            }
          },
          "attachments": {
            "readOnly": true,
            "x-expandable": true,
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Attachment"
                    },
                    {
                      "type": "integer"
                    }
                  ]
                }
              }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "completed_at": {
            "type": [
              "null",
              "string"
            ],
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "Transfer": {
        "title": "Document Transfer",
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "document.transfer"
            ]
          }
        }
      },
      "Transfer-2": {
        "type": "object",
        "properties": {
          "require_return": {
            "type": "boolean",
            "default": false
          },
          "require_confirmation": {
            "type": "boolean",
            "default": false
          },
          "instructions": {
            "type": [
              "null",
              "string"
            ]
          },
          "return_message": {
            "description": "Required if `require_return: true`\n",
            "type": [
              "null",
              "string"
            ]
          }
        }
      },
      "Form": {
        "title": "Form",
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "form"
            ]
          }
        }
      },
      "ClientForm": {
        "title": "Client Form",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "client_form"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "reference": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "Forms are either for internal data collection (`internal`), or are requested for completion by the client (`requested`).",
            "enum": [
              "internal",
              "requested"
            ]
          },
          "client": {
            "readOnly": true,
            "x-expandable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Client"
              },
              {
                "type": "integer"
              }
            ]
          },
          "record": {
            "description": "Always `null` when `type: internal`",
            "readOnly": true,
            "x-expandable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Record"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": [
              "null",
              "string"
            ]
          },
          "instructions": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Document"
              }
            ]
          },
          "fields": {
            "type": "array",
            "description": "The first field must always be a Section. Any Fields not present in a Section are omitted.",
            "minItems": 2,
            "items": {
              "$ref": "#/components/schemas/CollectorFields"
            }
          },
          "version": {
            "type": "integer",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "completed_at": {
            "type": [
              "null",
              "string"
            ],
            "format": "date-time",
            "readOnly": true
          },
          "archived_at": {
            "type": [
              "null",
              "string"
            ],
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "RecordSteps": {
        "title": "Record Steps",
        "anyOf": [
          {
            "title": "Credit report",
            "anyOf": [
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Step"
                  },
                  {
                    "$ref": "#/components/schemas/CallcreditCallReport"
                  },
                  {
                    "$ref": "#/components/schemas/RecordCheck"
                  },
                  {
                    "$ref": "#/components/schemas/Metadata"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Step"
                  },
                  {
                    "$ref": "#/components/schemas/EquifaxCredit"
                  },
                  {
                    "$ref": "#/components/schemas/RecordCheck"
                  },
                  {
                    "$ref": "#/components/schemas/Metadata"
                  }
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/CriminalRecord"
              },
              {
                "$ref": "#/components/schemas/CriminalRecord-2"
              },
              {
                "$ref": "#/components/schemas/RecordCheck"
              },
              {
                "$ref": "#/components/schemas/Metadata"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Dummy"
              },
              {
                "$ref": "#/components/schemas/Dummy-2"
              },
              {
                "$ref": "#/components/schemas/RecordCheck"
              },
              {
                "$ref": "#/components/schemas/Metadata"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Thorntons"
              },
              {
                "$ref": "#/components/schemas/RecordCheck"
              },
              {
                "$ref": "#/components/schemas/Metadata"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/HscniAccessNi"
              },
              {
                "$ref": "#/components/schemas/HscniAccessNi-2"
              },
              {
                "$ref": "#/components/schemas/RecordCheck"
              },
              {
                "$ref": "#/components/schemas/Metadata"
              }
            ]
          },
          {
            "title": "Identity report",
            "anyOf": [
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Step"
                  },
                  {
                    "$ref": "#/components/schemas/CallcreditCallValidate"
                  },
                  {
                    "$ref": "#/components/schemas/RecordCheck"
                  },
                  {
                    "$ref": "#/components/schemas/Metadata"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Step"
                  },
                  {
                    "$ref": "#/components/schemas/EquifaxIdentity"
                  },
                  {
                    "$ref": "#/components/schemas/RecordCheck"
                  },
                  {
                    "$ref": "#/components/schemas/Metadata"
                  }
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/NhsEsr"
              },
              {
                "$ref": "#/components/schemas/NhsEsr-2"
              },
              {
                "$ref": "#/components/schemas/RecordCheck"
              },
              {
                "$ref": "#/components/schemas/Metadata"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Onfido"
              },
              {
                "$ref": "#/components/schemas/Onfido-2"
              },
              {
                "$ref": "#/components/schemas/RecordCheck"
              },
              {
                "$ref": "#/components/schemas/Metadata"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Reference"
              },
              {
                "$ref": "#/components/schemas/Reference-2"
              },
              {
                "$ref": "#/components/schemas/RecordCheck"
              },
              {
                "$ref": "#/components/schemas/Metadata"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/TrueLayer"
              },
              {
                "$ref": "#/components/schemas/TrueLayer-2"
              },
              {
                "$ref": "#/components/schemas/RecordCheck"
              },
              {
                "$ref": "#/components/schemas/Metadata"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Video"
              },
              {
                "$ref": "#/components/schemas/RecordCheck"
              },
              {
                "$ref": "#/components/schemas/Metadata"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Watchlist"
              },
              {
                "$ref": "#/components/schemas/Watchlist-2"
              },
              {
                "$ref": "#/components/schemas/RecordCheck"
              },
              {
                "$ref": "#/components/schemas/Metadata"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Request"
              },
              {
                "type": "object",
                "properties": {
                  "preferences": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Request-2"
                      }
                    ]
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "document": {
                    "readOnly": true,
                    "x-expandable": true,
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/RecordDocument"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  }
                }
              },
              {
                "$ref": "#/components/schemas/Metadata"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Transfer"
              },
              {
                "type": "object",
                "properties": {
                  "preferences": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Transfer-2"
                      }
                    ]
                  },
                  "document": {
                    "readOnly": true,
                    "x-expandable": true,
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/RecordDocument"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  }
                }
              },
              {
                "$ref": "#/components/schemas/Metadata"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Form"
              },
              {
                "type": "object",
                "properties": {
                  "form": {
                    "readOnly": true,
                    "x-expandable": true,
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ClientForm"
                      },
                      {
                        "type": "string",
                        "format": "uuid",
                        "title": "Form reference"
                      }
                    ]
                  }
                }
              },
              {
                "$ref": "#/components/schemas/Metadata"
              }
            ]
          }
        ]
      },
      "Record": {
        "title": "Record",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "record"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "status": {
            "$ref": "#/components/schemas/RecordStatus"
          },
          "perform_url": {
            "description": "The unique URL to complete the record steps in a browser.",
            "oneOf": [
              {
                "type": "string",
                "format": "url"
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ],
                "description": "Value is `false` when none of the steps are available for submission due to completion, expiry or for any other reason."
              }
            ],
            "readOnly": true
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "client": {
            "readOnly": true,
            "x-expandable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Client"
              },
              {
                "type": "integer"
              }
            ]
          },
          "steps": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/RecordSteps"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "archived_at": {
            "type": [
              "null",
              "string"
            ],
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "Bold": {
        "title": "Bold",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "bold"
            ]
          }
        }
      },
      "Link": {
        "title": "Link",
        "type": "object",
        "required": [
          "type",
          "attrs"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "link"
            ]
          },
          "attrs": {
            "type": "object",
            "required": [
              "href",
              "target"
            ],
            "properties": {
              "href": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "class": {
                "type": [
                  "null",
                  "string"
                ]
              }
            }
          }
        }
      },
      "Text": {
        "anyOf": [
          {
            "title": "Plain Text",
            "type": "object",
            "required": [
              "type",
              "text"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "text"
                ]
              },
              "text": {
                "type": "string"
              }
            }
          },
          {
            "title": "Marked Text",
            "type": "object",
            "required": [
              "type",
              "marks",
              "text"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "text"
                ]
              },
              "marks": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Bold"
                    },
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                }
              },
              "text": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Paragraph": {
        "title": "TipTap Paragraph",
        "type": "object",
        "required": [
          "type",
          "content"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "paragraph"
            ]
          },
          "content": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/Text"
            }
          }
        }
      },
      "Nodes": {
        "title": "TipTap Nodes",
        "anyOf": [
          {
            "$ref": "#/components/schemas/Paragraph"
          },
          {
            "$ref": "#/components/schemas/BulletList"
          },
          {
            "$ref": "#/components/schemas/OrderedList"
          }
        ]
      },
      "ListItem": {
        "title": "TipTap List Item",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "listItem"
            ]
          },
          "content": {
            "type": "array",
            "minItems": 1,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Nodes"
                }
              ]
            }
          }
        }
      },
      "BulletList": {
        "title": "TipTap Bullet List",
        "type": "object",
        "required": [
          "type",
          "content"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "bulletList"
            ]
          },
          "content": {
            "type": "array",
            "minItems": 1,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ListItem"
                }
              ]
            }
          }
        }
      },
      "OrderedList": {
        "title": "TipTap Ordered List",
        "type": "object",
        "required": [
          "type",
          "attrs",
          "content"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "orderedList"
            ]
          },
          "attrs": {
            "type": "object",
            "required": [
              "start"
            ],
            "properties": {
              "start": {
                "type": "integer"
              }
            }
          },
          "content": {
            "type": "array",
            "minItems": 1,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ListItem"
                }
              ]
            }
          }
        }
      },
      "Document": {
        "title": "TipTap Document",
        "type": "object",
        "required": [
          "type",
          "content"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "doc"
            ]
          },
          "content": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/Nodes"
            }
          }
        }
      },
      "Field": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "Section": {
        "title": "Section",
        "allOf": [
          {
            "$ref": "#/components/schemas/Field"
          },
          {
            "type": "object",
            "required": [
              "label",
              "fields"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "section"
                ]
              },
              "label": {
                "type": "string"
              },
              "fields": {
                "type": "array",
                "description": "List of field IDs.",
                "minItems": 1,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "Dynamic": {
        "type": "object",
        "properties": {
          "show_if": {
            "description": "An object keyed by the field ID of a **Single Choice** or **Multiple Choice** field and its desired value to activate this field. Cannot be used if this field is present in another field's `show_if` property.\n",
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "object",
                "minProperties": 1,
                "additionalProperties": {
                  "title": "Field value",
                  "type": "string"
                }
              }
            ]
          }
        }
      },
      "Heading": {
        "title": "Heading",
        "allOf": [
          {
            "$ref": "#/components/schemas/Field"
          },
          {
            "type": "object",
            "required": [
              "label"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "heading"
                ]
              },
              "label": {
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Dynamic"
          }
        ]
      },
      "Paragraph-2": {
        "title": "Paragraph",
        "allOf": [
          {
            "$ref": "#/components/schemas/Field"
          },
          {
            "type": "object",
            "required": [
              "json_content"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "rich_text"
                ]
              },
              "json_content": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Document"
                  }
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/Dynamic"
          }
        ]
      },
      "Validation": {
        "type": "object",
        "properties": {
          "validation": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "required"
                  ]
                }
              }
            ]
          }
        }
      },
      "Input": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Field"
          },
          {
            "type": "object",
            "required": [
              "label"
            ],
            "properties": {
              "label": {
                "type": "string"
              },
              "description": {
                "type": [
                  "null",
                  "string"
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/Validation"
          },
          {
            "$ref": "#/components/schemas/Dynamic"
          }
        ]
      },
      "ShortAnswer": {
        "title": "Short Answer",
        "allOf": [
          {
            "$ref": "#/components/schemas/Input"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "text"
                ]
              }
            }
          }
        ]
      },
      "Input-2": {
        "type": "object",
        "properties": {
          "flag": {
            "type": "boolean"
          },
          "value": {
            "type": [
              "null",
              "string"
            ]
          }
        }
      },
      "ShortAnswer-2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ShortAnswer"
          },
          {
            "$ref": "#/components/schemas/Input-2"
          }
        ]
      },
      "LongAnswer": {
        "title": "Long Answer",
        "allOf": [
          {
            "$ref": "#/components/schemas/Input"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "textarea"
                ]
              }
            }
          }
        ]
      },
      "LongAnswer-2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LongAnswer"
          },
          {
            "$ref": "#/components/schemas/Input-2"
          }
        ]
      },
      "MultiInput": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Field"
          },
          {
            "type": "object",
            "required": [
              "label"
            ],
            "properties": {
              "label": {
                "type": "object"
              },
              "description": {
                "type": [
                  "null",
                  "string"
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/Validation"
          },
          {
            "$ref": "#/components/schemas/Dynamic"
          }
        ]
      },
      "Choice": {
        "title": "Choice",
        "allOf": [
          {
            "type": "object",
            "required": [
              "value",
              "options"
            ],
            "properties": {
              "value": {
                "type": "string"
              },
              "options": {
                "type": "array",
                "minItems": 2,
                "uniqueItems": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "SingleChoice": {
        "title": "Single Choice",
        "allOf": [
          {
            "$ref": "#/components/schemas/MultiInput"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "radio"
                ]
              },
              "label": {
                "$ref": "#/components/schemas/Choice"
              }
            }
          }
        ]
      },
      "SingleChoice-2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SingleChoice"
          },
          {
            "$ref": "#/components/schemas/Input-2"
          }
        ]
      },
      "MultipleChoice": {
        "title": "Multiple Choice",
        "allOf": [
          {
            "$ref": "#/components/schemas/MultiInput"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "checkbox"
                ]
              },
              "label": {
                "$ref": "#/components/schemas/Choice"
              }
            }
          }
        ]
      },
      "MultipleChoice-2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MultipleChoice"
          },
          {
            "$ref": "#/components/schemas/Input-2"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      "Manual": {
        "title": "Manual",
        "type": "object",
        "required": [
          "label",
          "description"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "document"
            ]
          },
          "label": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Document-2": {
        "title": "Document",
        "allOf": [
          {
            "$ref": "#/components/schemas/Field"
          },
          {
            "$ref": "#/components/schemas/Manual"
          },
          {
            "$ref": "#/components/schemas/Validation"
          },
          {
            "$ref": "#/components/schemas/Dynamic"
          },
          {
            "$ref": "#/components/schemas/Input-2"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      "CollectorFields": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Section"
          },
          {
            "$ref": "#/components/schemas/Heading"
          },
          {
            "$ref": "#/components/schemas/Paragraph-2"
          },
          {
            "$ref": "#/components/schemas/ShortAnswer-2"
          },
          {
            "$ref": "#/components/schemas/LongAnswer-2"
          },
          {
            "$ref": "#/components/schemas/SingleChoice-2"
          },
          {
            "$ref": "#/components/schemas/MultipleChoice-2"
          },
          {
            "$ref": "#/components/schemas/Document-2"
          }
        ]
      },
      "ClientFile": {
        "title": "Client File",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "client_file"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "enum": [
              "internal",
              "sent",
              "received"
            ]
          },
          "source": {
            "readOnly": true,
            "x-expandable": true,
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "check",
                      "client",
                      "form",
                      "record_document"
                    ]
                  }
                }
              },
              {
                "$ref": "#/components/schemas/Check-2"
              },
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Client"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "status": {
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "enum": [
                              "pending",
                              "approved",
                              "rejected"
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/ClientForm"
              },
              {
                "$ref": "#/components/schemas/RecordDocument"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "attachment": {
            "$ref": "#/components/schemas/Attachment"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "Form-2": {
        "type": "object",
        "required": [
          "preferences"
        ],
        "properties": {
          "preferences": {
            "writeOnly": true,
            "type": "object",
            "required": [
              "form"
            ],
            "properties": {
              "form": {
                "type": "string",
                "format": "uuid",
                "description": "Form template reference"
              }
            }
          }
        }
      },
      "RecordStepsWrite": {
        "title": "Record Steps",
        "anyOf": [
          {
            "title": "Credit report",
            "anyOf": [
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Step"
                  },
                  {
                    "$ref": "#/components/schemas/CallcreditCallReport"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Step"
                  },
                  {
                    "$ref": "#/components/schemas/EquifaxCredit"
                  }
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/CriminalRecord"
              },
              {
                "$ref": "#/components/schemas/CriminalRecord-2"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Dummy"
              },
              {
                "$ref": "#/components/schemas/Dummy-2"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Thorntons"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/HscniAccessNi"
              },
              {
                "$ref": "#/components/schemas/HscniAccessNi-2"
              }
            ]
          },
          {
            "title": "Identity report",
            "anyOf": [
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Step"
                  },
                  {
                    "$ref": "#/components/schemas/CallcreditCallValidate"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Step"
                  },
                  {
                    "$ref": "#/components/schemas/EquifaxIdentity"
                  }
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/NhsEsr"
              },
              {
                "$ref": "#/components/schemas/NhsEsr-2"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Onfido"
              },
              {
                "$ref": "#/components/schemas/Onfido-2"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Reference"
              },
              {
                "$ref": "#/components/schemas/Reference-2"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/TrueLayer"
              },
              {
                "$ref": "#/components/schemas/TrueLayer-2"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Video"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Watchlist"
              },
              {
                "$ref": "#/components/schemas/Watchlist-2"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Request"
              },
              {
                "type": "object",
                "required": [
                  "preferences"
                ],
                "properties": {
                  "preferences": {
                    "oneOf": [
                      {
                        "title": "New Document",
                        "$ref": "#/components/schemas/Request-2"
                      },
                      {
                        "title": "Document Template",
                        "type": "object",
                        "required": [
                          "template"
                        ],
                        "properties": {
                          "template": {
                            "type": "integer"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Transfer"
              },
              {
                "type": "object",
                "required": [
                  "preferences"
                ],
                "properties": {
                  "preferences": {
                    "oneOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "New Document",
                            "required": [
                              "name",
                              "attachment"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "attachment": {
                                "type": "integer"
                              }
                            }
                          },
                          {
                            "$ref": "#/components/schemas/Transfer-2"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Document Template",
                            "required": [
                              "template"
                            ],
                            "properties": {
                              "template": {
                                "type": "integer"
                              }
                            }
                          },
                          {
                            "$ref": "#/components/schemas/Transfer-2"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/Step"
              },
              {
                "$ref": "#/components/schemas/Form"
              },
              {
                "$ref": "#/components/schemas/Form-2"
              }
            ]
          }
        ]
      },
      "RecordSettings": {
        "title": "Record Settings",
        "type": "object",
        "required": [
          "steps",
          "notification"
        ],
        "properties": {
          "steps": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/RecordStepsWrite"
            }
          },
          "notification": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "email"
                ]
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ]
              }
            ]
          },
          "message": {
            "type": [
              "null",
              "string"
            ],
            "maxLength": 5000
          },
          "reminder": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "Document-3": {
        "title": "Document",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "document"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "null",
              "string"
            ]
          },
          "is_enabled": {
            "type": "boolean"
          },
          "attachment": {
            "readOnly": true,
            "x-expandable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Attachment"
              },
              {
                "type": "integer"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "EmailTemplate": {
        "title": "Email Template",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "email_template"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "is_enabled": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "DocumentTemplate": {
        "title": "Document Template",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "description",
          "content"
        ],
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "document_template"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "is_enabled": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "RecordTemplate": {
        "title": "Record Template",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "description",
          "presets"
        ],
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "record_template"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string"
          },
          "presets": {
            "title": "Record Template Presets",
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/RecordSettings"
              },
              {
                "properties": {
                  "assignees": {
                    "type": "array",
                    "description": "IDs of team members assigned to the Record.",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            ]
          },
          "is_enabled": {
            "type": "boolean",
            "default": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "WebhookSubscribeEvents": {
        "type": "string",
        "enum": [
          "*",
          "client.*",
          "form.*",
          "record.*",
          "client.archived",
          "client.created",
          "client.deleted",
          "client.organisations",
          "client.record",
          "client.status",
          "client.unarchived",
          "client.updated",
          "form.attached",
          "form.deleted",
          "form.modified",
          "form.sent",
          "form.submitted",
          "form.updated",
          "record.bounced",
          "record.created",
          "record.finished",
          "record.reviewed",
          "record.unreviewed",
          "record.updated"
        ]
      },
      "Webhook": {
        "title": "Webhook",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "webhook"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "url": {
            "type": "string"
          },
          "secret": {
            "type": "string",
            "readOnly": true
          },
          "events": {
            "type": "array",
            "description": "The event or events this webhook is subscribed to. Supports wildcards; `*` all events, `client.*` all client events, etc.\n",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "$ref": "#/components/schemas/WebhookSubscribeEvents"
            }
          },
          "is_enabled": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "WebhookDeliveryEvents": {
        "type": "string",
        "enum": [
          "client.archived",
          "client.created",
          "client.deleted",
          "client.organisations",
          "client.record",
          "client.status",
          "client.unarchived",
          "client.updated",
          "form.attached",
          "form.deleted",
          "form.modified",
          "form.sent",
          "form.submitted",
          "form.updated",
          "record.bounced",
          "record.created",
          "record.finished",
          "record.reviewed",
          "record.unreviewed",
          "record.updated",
          "ping"
        ]
      },
      "WebhookDeliveryRequest": {
        "title": "Webhook Delivery Request",
        "type": "object",
        "readOnly": true,
        "properties": {
          "url": {
            "type": "string"
          },
          "method": {
            "type": "string",
            "enum": [
              "POST"
            ]
          },
          "headers": {
            "type": "object",
            "properties": {
              "Content-Length": {
                "type": "string"
              },
              "Host": {
                "type": "string"
              },
              "User-Agent": {
                "type": "string"
              },
              "Content-Type": {
                "type": "string",
                "enum": [
                  "application/json"
                ]
              },
              "X-AQID-Signature": {
                "type": "string"
              },
              "X-AQID-Delivery-Id": {
                "type": "string"
              }
            }
          },
          "body": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "event": {
                "$ref": "#/components/schemas/WebhookDeliveryEvents"
              },
              "sent_at": {
                "type": "string",
                "format": "date-time"
              },
              "data": {
                "anyOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "object"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "WebhookDeliveryResponse": {
        "title": "Webhook Delivery Response",
        "type": "object",
        "readOnly": true,
        "properties": {
          "status_code": {
            "type": "string"
          },
          "headers": {
            "type": "object"
          },
          "body": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        }
      },
      "WebhookDelivery": {
        "title": "Webhook Delivery",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "webhook_delivery"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "event": {
            "readOnly": true,
            "$ref": "#/components/schemas/WebhookDeliveryEvents"
          },
          "attempts": {
            "type": "integer",
            "minimum": 0,
            "readOnly": true
          },
          "request": {
            "$ref": "#/components/schemas/WebhookDeliveryRequest"
          },
          "response": {
            "$ref": "#/components/schemas/WebhookDeliveryResponse"
          },
          "last_sent_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "Template": {
        "title": "Template",
        "type": "object",
        "required": [
          "template_id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "document"
            ]
          },
          "template_id": {
            "type": "integer"
          }
        }
      },
      "DocumentTemplate-2": {
        "title": "Document",
        "allOf": [
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Field"
                  },
                  {
                    "$ref": "#/components/schemas/Manual"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Field"
                  },
                  {
                    "$ref": "#/components/schemas/Template"
                  }
                ]
              }
            ]
          },
          {
            "$ref": "#/components/schemas/Validation"
          },
          {
            "$ref": "#/components/schemas/Dynamic"
          }
        ]
      },
      "BuilderFields": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Section"
          },
          {
            "$ref": "#/components/schemas/Heading"
          },
          {
            "$ref": "#/components/schemas/Paragraph-2"
          },
          {
            "$ref": "#/components/schemas/ShortAnswer"
          },
          {
            "$ref": "#/components/schemas/LongAnswer"
          },
          {
            "$ref": "#/components/schemas/SingleChoice"
          },
          {
            "$ref": "#/components/schemas/MultipleChoice"
          },
          {
            "$ref": "#/components/schemas/DocumentTemplate-2"
          }
        ]
      },
      "FormTemplate": {
        "title": "Form Template",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "form_template"
            ]
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "reference": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": [
              "null",
              "string"
            ],
            "maxLength": 255
          },
          "instructions": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Document"
              }
            ]
          },
          "fields": {
            "type": "array",
            "description": "The first field must always be a Section. Any Fields not present in a Section are omitted.",
            "minItems": 2,
            "items": {
              "$ref": "#/components/schemas/BuilderFields"
            }
          },
          "version": {
            "type": "integer",
            "readOnly": true
          },
          "is_enabled": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "archived_at": {
            "type": [
              "null",
              "string"
            ],
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "AvailableStep": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "object": {
            "type": "string",
            "enum": [
              "available_step"
            ],
            "readOnly": true
          },
          "type": {
            "type": "string"
          }
        }
      },
      "Costs": {
        "type": "object",
        "properties": {
          "costs": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "integer",
              "minimum": 0
            }
          }
        }
      },
      "AvailableSteps": {
        "title": "Available Steps",
        "anyOf": [
          {
            "title": "Credit report",
            "anyOf": [
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AvailableStep"
                  },
                  {
                    "$ref": "#/components/schemas/CallcreditCallReport"
                  },
                  {
                    "$ref": "#/components/schemas/Costs"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AvailableStep"
                  },
                  {
                    "$ref": "#/components/schemas/EquifaxCredit"
                  },
                  {
                    "$ref": "#/components/schemas/Costs"
                  }
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailableStep"
              },
              {
                "$ref": "#/components/schemas/CriminalRecord"
              },
              {
                "$ref": "#/components/schemas/Costs"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailableStep"
              },
              {
                "$ref": "#/components/schemas/Dummy"
              },
              {
                "$ref": "#/components/schemas/Costs"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailableStep"
              },
              {
                "$ref": "#/components/schemas/Thorntons"
              },
              {
                "$ref": "#/components/schemas/Costs"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailableStep"
              },
              {
                "$ref": "#/components/schemas/HscniAccessNi"
              },
              {
                "$ref": "#/components/schemas/Costs"
              }
            ]
          },
          {
            "title": "Identity report",
            "anyOf": [
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AvailableStep"
                  },
                  {
                    "$ref": "#/components/schemas/CallcreditCallValidate"
                  },
                  {
                    "$ref": "#/components/schemas/Costs"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AvailableStep"
                  },
                  {
                    "$ref": "#/components/schemas/EquifaxIdentity"
                  },
                  {
                    "$ref": "#/components/schemas/Costs"
                  }
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailableStep"
              },
              {
                "$ref": "#/components/schemas/NhsEsr"
              },
              {
                "$ref": "#/components/schemas/Costs"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailableStep"
              },
              {
                "$ref": "#/components/schemas/Onfido"
              },
              {
                "$ref": "#/components/schemas/Costs"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailableStep"
              },
              {
                "$ref": "#/components/schemas/Reference"
              },
              {
                "$ref": "#/components/schemas/Costs"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailableStep"
              },
              {
                "$ref": "#/components/schemas/TrueLayer"
              },
              {
                "$ref": "#/components/schemas/Costs"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailableStep"
              },
              {
                "$ref": "#/components/schemas/Video"
              },
              {
                "$ref": "#/components/schemas/Costs"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailableStep"
              },
              {
                "$ref": "#/components/schemas/Watchlist"
              },
              {
                "$ref": "#/components/schemas/Costs"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailableStep"
              },
              {
                "$ref": "#/components/schemas/Request"
              },
              {
                "$ref": "#/components/schemas/Costs"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailableStep"
              },
              {
                "$ref": "#/components/schemas/Transfer"
              },
              {
                "$ref": "#/components/schemas/Costs"
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailableStep"
              },
              {
                "$ref": "#/components/schemas/Form"
              },
              {
                "$ref": "#/components/schemas/Costs"
              }
            ]
          }
        ]
      },
      "ValidatedSteps": {
        "title": "Validated Steps",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "enum": [
              "validated_steps"
            ]
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "enum": [
                    "validated_step"
                  ]
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "check.credit",
                    "check.criminal_record",
                    "check.dummy",
                    "check.hscni_access_ni",
                    "check.identity",
                    "check.nhs_esr",
                    "check.banking_information",
                    "check.photo_id",
                    "check.reference",
                    "check.thorntons_onboarding",
                    "check.video",
                    "check.watchlist",
                    "document.request",
                    "document.transfer",
                    "form"
                  ]
                },
                "cost": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      },
      "SdkToken": {
        "title": "SDK Token",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "sdk_token"
            ]
          },
          "token": {
            "type": "string",
            "description": "A JSON Web Token, valid for `60` minutes.",
            "readOnly": true
          },
          "record_id": {
            "type": "integer",
            "description": "The SDK Token is scoped for this individual Record only.",
            "writeOnly": true
          }
        }
      }
    },
    "securitySchemes": {
      "personal_token": {
        "bearerFormat": "auth-scheme",
        "description": "Bearer HTTP authentication.",
        "scheme": "bearer",
        "type": "http"
      },
      "oauth": {
        "type": "oauth2",
        "description": "OAuth2 authentication.",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/oauth/authorize",
            "tokenUrl": "/oauth/token",
            "refreshUrl": "/oauth/token",
            "scopes": {}
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PaginatedList"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/User-2"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "user": {
                                "$ref": "#/components/schemas/User"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            },
            "example": {
              "object": "paginated_list",
              "data": [
                {
                  "object": "assignee",
                  "id": 34535,
                  "type": "user",
                  "user": {
                    "object": "user",
                    "id": 121,
                    "name": "Lorraine Baines",
                    "email": "lorraine@example.com",
                    "is_verified": true,
                    "is_disabled": false,
                    "created_at": "2019-08-24T14:15:22Z",
                    "updated_at": "2019-08-24T14:15:22Z"
                  }
                },
                {
                  "object": "assignee",
                  "id": 34538,
                  "type": "user",
                  "user": {
                    "object": "user",
                    "id": 472,
                    "name": "Dennis Jones",
                    "email": "dennis@example.com",
                    "is_verified": true,
                    "is_disabled": false,
                    "created_at": "2019-08-25T11:11:07Z",
                    "updated_at": "2019-08-25T11:11:07Z"
                  }
                }
              ],
              "total": 2,
              "count": 2,
              "limit": 100,
              "current_page": 1,
              "total_pages": 1,
              "links": null
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "error": "Unauthenticated."
            }
          }
        }
      },
      "422": {
        "description": "Unprocessable Content",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "minItems": 1,
                "description": "Each property may contain more than one validation error\n\nThe property name references to the property's dot-notated path within the request body:\n\n**Request body**\n```json\n{\n  \"fields\": {\n    \"type\": false\n  }\n}\n```\n\n**Response**\n```json\n{\n  \"fields.type\": ['Value must be a string']\n}\n```\n",
                "items": {
                  "type": "string"
                }
              }
            },
            "example": {
              "errors": [
                "At least one property is required"
              ]
            }
          }
        }
      }
    },
    "parameters": {
      "resourceId": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      }
    }
  }
}