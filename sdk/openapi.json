{
  "openapi": "3.1.0",
  "info": {
    "title": "Amiqus SDK REST API",
    "version": "1.0",
    "description": "The Amiqus SDK API is used to undertake Amiqus requests on behalf of a data subject. All API requests require SDK Token authentication. SDK Tokens are generated using the Amiqus API, scoped to a single Record and are valid for 60 minutes.",
    "contact": {
      "email": "developers@amiqus.co",
      "name": "Amiqus Engineering",
      "url": "https://developers.amiqus.co/sdk/sdk-api-reference.html"
    }
  },
  "servers": [
    {
      "url": "https://id.amiqus.co/sdk/v1"
    }
  ],
  "paths": {
    "/status": {
      "get": {
        "summary": "SDK token status",
        "description": "Check validity of the SDK token and retrieve details of the scoped Record.",
        "operationId": "get-status",
        "security": [
          {
            "sdk_token": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordStatus-2"
                },
                "example": {
                  "object": "record_status",
                  "id": 983434,
                  "status": "pending",
                  "email": "marty@example.com",
                  "client": 73845,
                  "created_at": "2022-05-22T08:22:12Z",
                  "updated_at": "2022-05-22T08:22:12Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "default": "Unauthenticated"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/steps/{id}": {
      "post": {
        "summary": "Submit a step",
        "description": "Submit a step.",
        "operationId": "post-steps-id",
        "security": [
          {
            "sdk_token": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IdentityReport"
                  },
                  {
                    "$ref": "#/components/schemas/Dummy"
                  }
                ]
              },
              "examples": {
                "identity_report": {
                  "summary": "Identity report",
                  "value": {
                    "title": "miss",
                    "dob": "1967-10-29",
                    "address_history": [
                      {
                        "address": {
                          "unit": "3rd Floor",
                          "house_name": "Citypoint",
                          "house_number": "65",
                          "street_name": "Haymarket Terrace",
                          "city": "Edinburgh",
                          "postcode": "EH12 5HD",
                          "country": "GB"
                        },
                        "start": "2019-08-24"
                      }
                    ],
                    "privacy_policy": true
                  }
                },
                "dummy": {
                  "summary": "Dummy",
                  "value": {
                    "state": "accepted",
                    "postcode": "EH12 5HD"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "default": "Unauthenticated"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "default": "Step not found"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "required_fields": {
                    "summary": "Errors returned for two required fields",
                    "value": {
                      "name.first_name": [
                        "The first name field is required"
                      ],
                      "name.last_name": [
                        "The last name field is required"
                      ]
                    }
                  },
                  "generic": {
                    "summary": "Generic error for a step that cannot yet be submitted",
                    "value": {
                      "errors": [
                        "Step 2 cannot be submitted until Step 1 has been completed"
                      ]
                    }
                  },
                  "completed": {
                    "summary": "Generic error for a step that has already been submitted",
                    "value": {
                      "errors": [
                        "Step 1 has already been completed"
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RecordStatus": {
        "type": "string",
        "enum": [
          "pending",
          "started",
          "complete",
          "incomplete",
          "waiting",
          "failed",
          "empty",
          "paused",
          "amendments",
          "reviewed"
        ]
      },
      "RecordStatus-2": {
        "title": "Record Status",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "const": "record_status"
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "status": {
            "$ref": "#/components/schemas/RecordStatus"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "client": {
            "readOnly": true,
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "Address": {
        "title": "Address",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object": {
            "type": "string",
            "readOnly": true,
            "const": "address"
          },
          "unit": {
            "type": [
              "null",
              "string"
            ],
            "description": "Unit, flat or apartment name or number."
          },
          "house_name": {
            "type": [
              "null",
              "string"
            ],
            "description": "House or building name."
          },
          "house_number": {
            "type": [
              "null",
              "string"
            ],
            "description": "House or building number."
          },
          "street_name": {
            "type": [
              "null",
              "string"
            ],
            "description": "First line of the street name."
          },
          "second_street": {
            "type": [
              "null",
              "string"
            ],
            "description": "Second line of the street name if applicable."
          },
          "district": {
            "type": [
              "null",
              "string"
            ],
            "description": "District, town, village, suburb or equivalent."
          },
          "city": {
            "type": [
              "null",
              "string"
            ],
            "description": "City name if applicable."
          },
          "province": {
            "type": [
              "null",
              "string"
            ],
            "description": "Province, county, municipality, township or equivalent."
          },
          "postcode": {
            "type": [
              "null",
              "string"
            ],
            "description": "Postcode, zip code or equivalent."
          },
          "country": {
            "type": [
              "null",
              "string"
            ],
            "enum": [
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "CI",
              "DK",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FI",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "XK",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "AN",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "NO",
              "OM",
              "PK",
              "PS",
              "PW",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "CM",
              "RE",
              "RO",
              "RU",
              "RW",
              "BL",
              "SH",
              "KN",
              "LC",
              "MF",
              "PM",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "KR",
              "SS",
              "ES",
              "LK",
              "VC",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "GB",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "YU",
              "ZM",
              "ZW"
            ],
            "description": "ISO3601 alpha-2 country code."
          }
        }
      },
      "IdentityReport": {
        "title": "Identity report",
        "type": "object",
        "required": [
          "address_history",
          "privacy_policy"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "The Client's name title.\n\nRequired unless provided when creating the Client.\n"
          },
          "dob": {
            "type": "string",
            "format": "date",
            "description": "The Client's date of birth.\n\nRequired unless provided when creating the Client.\n"
          },
          "address_history": {
            "type": "array",
            "minItems": 1,
            "description": "12 months of address history, most recent address country must be `GB`.",
            "items": {
              "title": "Address Period",
              "type": "object",
              "properties": {
                "address": {
                  "required": [
                    "country"
                  ],
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Address"
                    },
                    {
                      "properties": {
                        "postcode": {
                          "description": "Required if `country: \"GB\"`\n"
                        },
                        "unit": {
                          "maxLength": 30
                        },
                        "house_number": {
                          "maxLength": 12,
                          "description": "Required without any of `unit`, `house_name`"
                        },
                        "house_name": {
                          "maxLength": 50,
                          "description": "Required without any of `unit`, `house_number`"
                        },
                        "street_name": {
                          "maxLength": 50
                        },
                        "second_street": {
                          "maxLength": 50
                        },
                        "district": {
                          "maxLength": 25
                        }
                      }
                    }
                  ]
                },
                "start": {
                  "type": "string",
                  "format": "date"
                }
              },
              "required": [
                "address",
                "start"
              ]
            }
          },
          "privacy_policy": {
            "type": "boolean",
            "enum": [
              true
            ],
            "description": "Confirm the data subject has accepted <a href=\"https://www.transunion.co.uk/legal/privacy-centre?#pc-bureau\" target=\"_blank\" rel=\"noopener\">TransUnion's privacy notice</a>."
          }
        }
      },
      "Dummy": {
        "title": "Dummy",
        "type": "object",
        "required": [
          "state",
          "postcode"
        ],
        "properties": {
          "state": {
            "description": "The check will return this result state once submitted.",
            "type": "string",
            "enum": [
              "submitted",
              "accepted",
              "rejected",
              "refer",
              "failed",
              "paused"
            ]
          },
          "postcode": {
            "type": "string",
            "description": "An arbitrary piece of information that will be displayed on the check results."
          }
        }
      }
    },
    "securitySchemes": {
      "sdk_token": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Bearer JWT authentication."
      }
    }
  }
}