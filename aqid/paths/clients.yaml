get:
  summary: List all clients
  description: |
    Returns a paginated list of clients.

    To retrieve a client, refer to **[Retrieve a client](#tag/Clients/operation/get-clients-id)**.
  operationId: get-clients
  security:
    - personal_token: []
    - oauth: []
  tags:
    - Clients
  parameters:
    - name: page
      in: query
      schema:
        type: integer
        minimum: 1
    - name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 100
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            allOf:
                - $ref: ../components/schemas/PaginatedList.yaml
                - type: object
                  properties:
                    data:
                      items:
                        allOf:
                          - $ref: ../components/schemas/Client.yaml
                          - type: object
                            properties:
                              status:
                                oneOf:
                                  - type: "null"
                                  - type: string
                                    enum:
                                      - pending
                                      - approved
                                      - rejected
          example:
            $ref: ../examples/clients.get.200.json
    '401':
      $ref: ../components/schemas/Errors/401.yaml
post:
  summary: Create a client
  description: Create a new client.
  operationId: post-clients
  security:
    - personal_token: []
    - oauth: []
  tags:
    - Clients
  requestBody:
    content:
      application/json:
        schema:
          allOf:
            - $ref:  ../components/schemas/Client.yaml
            - type: object
              required:
                - email
                - name
              properties:
                status:
                  type: string
                  enum:
                    - pending
                    - approved
                    - rejected
                name:
                  allOf:
                    - $ref: ../components/schemas/Name.yaml
                    - type: object
                      required:
                        - first_name
                        - last_name
        example:
          $ref: ../examples/clients.post.json
  responses:
    '201':
      description: Created
      content:
        application/json:
          schema:
            allOf:
              - $ref: ../components/schemas/Client.yaml
              - type: object
                properties:
                  status:
                    oneOf:
                      - type: "null"
                      - type: string
                        enum:
                          - pending
                          - approved
                          - rejected
          example:
            $ref: ../examples/clients.id.get.200.json
    '401':
      $ref: ../components/schemas/Errors/401.yaml
    '422':
      $ref: ../components/schemas/Errors/422.yaml
