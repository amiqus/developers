import{_ as c,C as h,c as u,o as i,ah as n,b as l,j as r,w as t,a,G as d,ai as s}from"./chunks/framework.D1Ff5WEQ.js";const q=JSON.parse('{"title":"Automate client deletion","description":"Learn how to delete client data by filtering clients based on their deletion_date or by using the client.deletion_reminder_due webhook to remove all associated data in line with compliance obligations.","frontmatter":{"title":"Automate client deletion","description":"Learn how to delete client data by filtering clients based on their deletion_date or by using the client.deletion_reminder_due webhook to remove all associated data in line with compliance obligations."},"headers":[],"relativePath":"guides/use-cases/automate-client-deletion.md","filePath":"guides/use-cases/automate-client-deletion.md","lastUpdated":1750870696000}'),p={name:"guides/use-cases/automate-client-deletion.md"};function m(b,e,g,f,_,A){const o=h("Mermaid");return i(),u("div",null,[e[2]||(e[2]=n('<h1 id="automate-client-deletion" tabindex="-1">Automate client deletion <a class="header-anchor" href="#automate-client-deletion" aria-label="Permalink to &quot;Automate client deletion&quot;">​</a></h1><p>This guide demonstrates how to delete client data using our API. In line with compliance obligations, you can automatically identify clients scheduled for deletion either by polling the API using the <code>deletion_date</code> filter or by subscribing to the <code>client.deletion_reminder_due</code> webhook. Once identified, you can delete the client data—including all PII, files, and associated records—using the API endpoints provided.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li><strong>Amiqus API credentials:</strong> Ensure you have valid credentials to authenticate your requests.</li><li><strong>Compliance setup:</strong> Confirm that your deletion policies are in place and that the <code>deletion_date</code> is set correctly for each client.</li><li><strong>Webhook subscription (optional):</strong> To use the webhook-based approach, you must be subscribed to the <code>client.deletion_reminder_due</code> event in your webhook settings.</li></ul><h2 id="overview-of-the-flows" tabindex="-1">Overview of the flows <a class="header-anchor" href="#overview-of-the-flows" aria-label="Permalink to &quot;Overview of the flows&quot;">​</a></h2><p>There are two supported automation flows: polling and webhooks.</p><h3 id="option-1-polling-for-clients" tabindex="-1">Option 1: Polling for clients <a class="header-anchor" href="#option-1-polling-for-clients" aria-label="Permalink to &quot;Option 1: Polling for clients&quot;">​</a></h3>',7)),(i(),l(s,null,{default:t(()=>[d(o,{id:"mermaid-35",class:"mermaid",graph:"sequenceDiagram%0A%20%20%20%20participant%20Script%20as%20Your%20Script%0A%20%20%20%20participant%20Amiqus%20as%20Amiqus%20API%0A%0A%20%20%20%20Script-%3E%3EAmiqus%3A%20GET%20%2Fclients%3Fdeletion_date%3Dtoday%0A%20%20%20%20loop%20For%20each%20client%0A%20%20%20%20%20%20%20%20Script-%3E%3EAmiqus%3A%20DELETE%20%2Fclients%2F%7BclientId%7D%0A%20%20%20%20%20%20%20%20Amiqus--%3E%3EScript%3A%20Deletion%20confirmation%0A%20%20%20%20end%0A"})]),fallback:t(()=>e[0]||(e[0]=[a(" Loading... ")])),_:1})),e[3]||(e[3]=r("h3",{id:"option-2-using-the-client-deletion-reminder-due-webhook",tabindex:"-1"},[a("Option 2: Using the client.deletion_reminder_due webhook "),r("a",{class:"header-anchor",href:"#option-2-using-the-client-deletion-reminder-due-webhook","aria-label":'Permalink to "Option 2: Using the client.deletion_reminder_due webhook"'},"​")],-1)),(i(),l(s,null,{default:t(()=>[d(o,{id:"mermaid-39",class:"mermaid",graph:"sequenceDiagram%0A%20%20%20%20participant%20Amiqus%20as%20Amiqus%20Webhook%0A%20%20%20%20participant%20YourSystem%20as%20Your%20System%0A%20%20%20%20participant%20AmiqusAPI%20as%20Amiqus%20API%0A%0A%20%20%20%20Amiqus-%3E%3EYourSystem%3A%20POST%20%2Fwebhooks%20(client.deletion_reminder_due)%0A%20%20%20%20YourSystem-%3E%3EAmiqusAPI%3A%20DELETE%20%2Fclients%2F%7BclientId%7D%0A%20%20%20%20AmiqusAPI--%3E%3EYourSystem%3A%20Deletion%20confirmation%0A"})]),fallback:t(()=>e[1]||(e[1]=[a(" Loading... ")])),_:1})),e[4]||(e[4]=n('<h2 id="step-by-step-guide" tabindex="-1">Step-by-step guide <a class="header-anchor" href="#step-by-step-guide" aria-label="Permalink to &quot;Step-by-step guide&quot;">​</a></h2><h3 id="option-1-polling-via-the-api" tabindex="-1">Option 1: Polling via the API <a class="header-anchor" href="#option-1-polling-via-the-api" aria-label="Permalink to &quot;Option 1: Polling via the API&quot;">​</a></h3><h4 id="_1-list-all-clients-with-a-deletion-date-set-to-today" tabindex="-1">1. List all clients with a <code>deletion_date</code> set to today <a class="header-anchor" href="#_1-list-all-clients-with-a-deletion-date-set-to-today" aria-label="Permalink to &quot;1. List all clients with a `deletion_date` set to today&quot;">​</a></h4><p>Call the <a href="/aqid/api-reference.html#tag/Clients/operation/get-clients" target="_blank">list all clients</a> endpoint. Use the <code>deletion_date</code> filter with the value <code>today</code> to retrieve clients scheduled for deletion.</p><h4 id="_2-delete-each-client" tabindex="-1">2. Delete each client <a class="header-anchor" href="#_2-delete-each-client" aria-label="Permalink to &quot;2. Delete each client&quot;">​</a></h4><p>Iterate through the results and call the <a href="/aqid/api-reference.html#tag/Clients/operation/delete-clients-id" target="_blank">delete a client</a> endpoint for each client.</p><h3 id="option-2-handling-the-webhook" tabindex="-1">Option 2: Handling the webhook <a class="header-anchor" href="#option-2-handling-the-webhook" aria-label="Permalink to &quot;Option 2: Handling the webhook&quot;">​</a></h3><h4 id="_1-subscribe-to-the-client-deletion-reminder-due-event" tabindex="-1">1. Subscribe to the <code>client.deletion_reminder_due</code> event <a class="header-anchor" href="#_1-subscribe-to-the-client-deletion-reminder-due-event" aria-label="Permalink to &quot;1. Subscribe to the `client.deletion_reminder_due` event&quot;">​</a></h4><p>Ensure your webhook endpoint is configured to receive events, and that you&#39;re subscribed to the <a href="../webhooks.html#clientdeletion_reminder_due" target="_blank"><code>client.deletion_reminder_due</code></a> event.</p><h4 id="_2-receive-the-webhook" tabindex="-1">2. Receive the webhook <a class="header-anchor" href="#_2-receive-the-webhook" aria-label="Permalink to &quot;2. Receive the webhook&quot;">​</a></h4><p>When a client’s deletion date is due, you will receive a webhook payload containing the client ID.</p><h4 id="_3-delete-the-client" tabindex="-1">3. Delete the client <a class="header-anchor" href="#_3-delete-the-client" aria-label="Permalink to &quot;3. Delete the client&quot;">​</a></h4><p>Use the client ID from the payload to call the <a href="/aqid/api-reference.html#tag/Clients/operation/delete-clients-id" target="_blank">delete a client</a> endpoint.</p><h2 id="what-happens-next" tabindex="-1">What happens next? <a class="header-anchor" href="#what-happens-next" aria-label="Permalink to &quot;What happens next?&quot;">​</a></h2><p>After deleting the client data:</p><ul><li><strong>Log the deletion:</strong> Ensure that all deletion actions are logged for audit purposes.</li><li><strong>Review API limits:</strong> Monitor your <a href="./../concepts/rate-limits.html">API rate limits</a> to avoid any throttling, particularly if you are processing a large number of clients.</li><li><strong>Verify deletion:</strong> Consider implementing additional checks or notifications to confirm that deletions have been successfully executed.</li></ul><p>By following either of these approaches—or combining both for redundancy—you can efficiently manage the deletion of client data, ensuring that your practices remain compliant with data protection regulations.</p>',17))])}const k=c(p,[["render",m]]);export{q as __pageData,k as default};
